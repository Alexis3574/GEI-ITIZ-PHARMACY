
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  usuario: 'usuario',
  password: 'password',
  rol: 'rol',
  creadoen: 'creadoen'
};

exports.Prisma.ConfiguracionScalarFieldEnum = {
  id: 'id',
  clave: 'clave',
  valor: 'valor'
};

exports.Prisma.ProductosScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  tipo: 'tipo',
  preciocompra: 'preciocompra',
  precioventa: 'precioventa',
  stock: 'stock',
  stockminimo: 'stockminimo',
  fechacaducidad: 'fechacaducidad',
  creadoen: 'creadoen',
  unidadMedida: 'unidadMedida'
};

exports.Prisma.ProveedoresScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  contacto: 'contacto',
  productos: 'productos'
};

exports.Prisma.VentasScalarFieldEnum = {
  id: 'id',
  fecha: 'fecha',
  total: 'total',
  metodopago: 'metodopago'
};

exports.Prisma.DetalleventasScalarFieldEnum = {
  id: 'id',
  ventaid: 'ventaid',
  productoid: 'productoid',
  cantidad: 'cantidad',
  preciounitario: 'preciounitario'
};

exports.Prisma.FacturasScalarFieldEnum = {
  id: 'id',
  ventaid: 'ventaid',
  folio: 'folio',
  serie: 'serie',
  fecha: 'fecha',
  moneda: 'moneda',
  formaPago: 'formaPago',
  metodoPago: 'metodoPago',
  usoCfdi: 'usoCfdi',
  tasaIvaGlobal: 'tasaIvaGlobal',
  observaciones: 'observaciones',
  subtotal: 'subtotal',
  iva: 'iva',
  descuentos: 'descuentos',
  total: 'total',
  negocioNombre: 'negocioNombre',
  negocioRfc: 'negocioRfc',
  negocioDir: 'negocioDir',
  negocioTel: 'negocioTel',
  negocioEmail: 'negocioEmail',
  clienteNombre: 'clienteNombre',
  clienteRfc: 'clienteRfc',
  clienteCp: 'clienteCp',
  clienteDir: 'clienteDir',
  clienteEmail: 'clienteEmail',
  clienteTel: 'clienteTel',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Factura_itemsScalarFieldEnum = {
  id: 'id',
  facturaId: 'facturaId',
  descripcion: 'descripcion',
  cantidad: 'cantidad',
  precio: 'precio',
  descuento: 'descuento',
  iva: 'iva',
  importe: 'importe'
};

exports.Prisma.MovimientosinventarioScalarFieldEnum = {
  id: 'id',
  productoid: 'productoid',
  tipo: 'tipo',
  cantidad: 'cantidad',
  observacion: 'observacion',
  fecha: 'fecha'
};

exports.Prisma.ReportesScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  datos: 'datos',
  fecha: 'fecha'
};

exports.Prisma.CarritoScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  creadoEn: 'creadoEn',
  estado: 'estado'
};

exports.Prisma.CarritoItemScalarFieldEnum = {
  id: 'id',
  carritoId: 'carritoId',
  productoId: 'productoId',
  cantidad: 'cantidad',
  precio: 'precio'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Rol = exports.$Enums.Rol = {
  administrador: 'administrador',
  usuario: 'usuario'
};

exports.Prisma.ModelName = {
  usuarios: 'usuarios',
  configuracion: 'configuracion',
  productos: 'productos',
  proveedores: 'proveedores',
  ventas: 'ventas',
  detalleventas: 'detalleventas',
  facturas: 'facturas',
  factura_items: 'factura_items',
  movimientosinventario: 'movimientosinventario',
  reportes: 'reportes',
  Carrito: 'Carrito',
  CarritoItem: 'CarritoItem'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
