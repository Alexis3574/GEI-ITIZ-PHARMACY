
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model configuracion
 * 
 */
export type configuracion = $Result.DefaultSelection<Prisma.$configuracionPayload>
/**
 * Model detalle_ventas
 * 
 */
export type detalle_ventas = $Result.DefaultSelection<Prisma.$detalle_ventasPayload>
/**
 * Model facturas
 * 
 */
export type facturas = $Result.DefaultSelection<Prisma.$facturasPayload>
/**
 * Model movimientos_inventario
 * 
 */
export type movimientos_inventario = $Result.DefaultSelection<Prisma.$movimientos_inventarioPayload>
/**
 * Model productos
 * 
 */
export type productos = $Result.DefaultSelection<Prisma.$productosPayload>
/**
 * Model proveedores
 * 
 */
export type proveedores = $Result.DefaultSelection<Prisma.$proveedoresPayload>
/**
 * Model reportes
 * 
 */
export type reportes = $Result.DefaultSelection<Prisma.$reportesPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>
/**
 * Model ventas
 * 
 */
export type ventas = $Result.DefaultSelection<Prisma.$ventasPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Configuracions
 * const configuracions = await prisma.configuracion.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Configuracions
   * const configuracions = await prisma.configuracion.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.configuracion`: Exposes CRUD operations for the **configuracion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configuracions
    * const configuracions = await prisma.configuracion.findMany()
    * ```
    */
  get configuracion(): Prisma.configuracionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_ventas`: Exposes CRUD operations for the **detalle_ventas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_ventas
    * const detalle_ventas = await prisma.detalle_ventas.findMany()
    * ```
    */
  get detalle_ventas(): Prisma.detalle_ventasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.facturas`: Exposes CRUD operations for the **facturas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Facturas
    * const facturas = await prisma.facturas.findMany()
    * ```
    */
  get facturas(): Prisma.facturasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.movimientos_inventario`: Exposes CRUD operations for the **movimientos_inventario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Movimientos_inventarios
    * const movimientos_inventarios = await prisma.movimientos_inventario.findMany()
    * ```
    */
  get movimientos_inventario(): Prisma.movimientos_inventarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productos`: Exposes CRUD operations for the **productos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Productos
    * const productos = await prisma.productos.findMany()
    * ```
    */
  get productos(): Prisma.productosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proveedores`: Exposes CRUD operations for the **proveedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedores
    * const proveedores = await prisma.proveedores.findMany()
    * ```
    */
  get proveedores(): Prisma.proveedoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reportes`: Exposes CRUD operations for the **reportes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reportes
    * const reportes = await prisma.reportes.findMany()
    * ```
    */
  get reportes(): Prisma.reportesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ventas`: Exposes CRUD operations for the **ventas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ventas
    * const ventas = await prisma.ventas.findMany()
    * ```
    */
  get ventas(): Prisma.ventasDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    configuracion: 'configuracion',
    detalle_ventas: 'detalle_ventas',
    facturas: 'facturas',
    movimientos_inventario: 'movimientos_inventario',
    productos: 'productos',
    proveedores: 'proveedores',
    reportes: 'reportes',
    usuarios: 'usuarios',
    ventas: 'ventas'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "configuracion" | "detalle_ventas" | "facturas" | "movimientos_inventario" | "productos" | "proveedores" | "reportes" | "usuarios" | "ventas"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      configuracion: {
        payload: Prisma.$configuracionPayload<ExtArgs>
        fields: Prisma.configuracionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configuracionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configuracionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          findFirst: {
            args: Prisma.configuracionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configuracionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          findMany: {
            args: Prisma.configuracionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>[]
          }
          create: {
            args: Prisma.configuracionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          createMany: {
            args: Prisma.configuracionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configuracionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>[]
          }
          delete: {
            args: Prisma.configuracionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          update: {
            args: Prisma.configuracionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          deleteMany: {
            args: Prisma.configuracionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configuracionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configuracionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>[]
          }
          upsert: {
            args: Prisma.configuracionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configuracionPayload>
          }
          aggregate: {
            args: Prisma.ConfiguracionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfiguracion>
          }
          groupBy: {
            args: Prisma.configuracionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionGroupByOutputType>[]
          }
          count: {
            args: Prisma.configuracionCountArgs<ExtArgs>
            result: $Utils.Optional<ConfiguracionCountAggregateOutputType> | number
          }
        }
      }
      detalle_ventas: {
        payload: Prisma.$detalle_ventasPayload<ExtArgs>
        fields: Prisma.detalle_ventasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_ventasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_ventasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          findFirst: {
            args: Prisma.detalle_ventasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_ventasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          findMany: {
            args: Prisma.detalle_ventasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>[]
          }
          create: {
            args: Prisma.detalle_ventasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          createMany: {
            args: Prisma.detalle_ventasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_ventasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>[]
          }
          delete: {
            args: Prisma.detalle_ventasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          update: {
            args: Prisma.detalle_ventasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          deleteMany: {
            args: Prisma.detalle_ventasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_ventasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_ventasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>[]
          }
          upsert: {
            args: Prisma.detalle_ventasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_ventasPayload>
          }
          aggregate: {
            args: Prisma.Detalle_ventasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_ventas>
          }
          groupBy: {
            args: Prisma.detalle_ventasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_ventasGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_ventasCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_ventasCountAggregateOutputType> | number
          }
        }
      }
      facturas: {
        payload: Prisma.$facturasPayload<ExtArgs>
        fields: Prisma.facturasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.facturasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.facturasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          findFirst: {
            args: Prisma.facturasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.facturasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          findMany: {
            args: Prisma.facturasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>[]
          }
          create: {
            args: Prisma.facturasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          createMany: {
            args: Prisma.facturasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.facturasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>[]
          }
          delete: {
            args: Prisma.facturasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          update: {
            args: Prisma.facturasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          deleteMany: {
            args: Prisma.facturasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.facturasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.facturasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>[]
          }
          upsert: {
            args: Prisma.facturasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$facturasPayload>
          }
          aggregate: {
            args: Prisma.FacturasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFacturas>
          }
          groupBy: {
            args: Prisma.facturasGroupByArgs<ExtArgs>
            result: $Utils.Optional<FacturasGroupByOutputType>[]
          }
          count: {
            args: Prisma.facturasCountArgs<ExtArgs>
            result: $Utils.Optional<FacturasCountAggregateOutputType> | number
          }
        }
      }
      movimientos_inventario: {
        payload: Prisma.$movimientos_inventarioPayload<ExtArgs>
        fields: Prisma.movimientos_inventarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.movimientos_inventarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.movimientos_inventarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          findFirst: {
            args: Prisma.movimientos_inventarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.movimientos_inventarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          findMany: {
            args: Prisma.movimientos_inventarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>[]
          }
          create: {
            args: Prisma.movimientos_inventarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          createMany: {
            args: Prisma.movimientos_inventarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.movimientos_inventarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>[]
          }
          delete: {
            args: Prisma.movimientos_inventarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          update: {
            args: Prisma.movimientos_inventarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          deleteMany: {
            args: Prisma.movimientos_inventarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.movimientos_inventarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.movimientos_inventarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>[]
          }
          upsert: {
            args: Prisma.movimientos_inventarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$movimientos_inventarioPayload>
          }
          aggregate: {
            args: Prisma.Movimientos_inventarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMovimientos_inventario>
          }
          groupBy: {
            args: Prisma.movimientos_inventarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Movimientos_inventarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.movimientos_inventarioCountArgs<ExtArgs>
            result: $Utils.Optional<Movimientos_inventarioCountAggregateOutputType> | number
          }
        }
      }
      productos: {
        payload: Prisma.$productosPayload<ExtArgs>
        fields: Prisma.productosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          findFirst: {
            args: Prisma.productosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          findMany: {
            args: Prisma.productosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          create: {
            args: Prisma.productosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          createMany: {
            args: Prisma.productosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          delete: {
            args: Prisma.productosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          update: {
            args: Prisma.productosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          deleteMany: {
            args: Prisma.productosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>[]
          }
          upsert: {
            args: Prisma.productosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productosPayload>
          }
          aggregate: {
            args: Prisma.ProductosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductos>
          }
          groupBy: {
            args: Prisma.productosGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductosGroupByOutputType>[]
          }
          count: {
            args: Prisma.productosCountArgs<ExtArgs>
            result: $Utils.Optional<ProductosCountAggregateOutputType> | number
          }
        }
      }
      proveedores: {
        payload: Prisma.$proveedoresPayload<ExtArgs>
        fields: Prisma.proveedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proveedoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proveedoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findFirst: {
            args: Prisma.proveedoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proveedoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findMany: {
            args: Prisma.proveedoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          create: {
            args: Prisma.proveedoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          createMany: {
            args: Prisma.proveedoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proveedoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          delete: {
            args: Prisma.proveedoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          update: {
            args: Prisma.proveedoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          deleteMany: {
            args: Prisma.proveedoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proveedoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proveedoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          upsert: {
            args: Prisma.proveedoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          aggregate: {
            args: Prisma.ProveedoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedores>
          }
          groupBy: {
            args: Prisma.proveedoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.proveedoresCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresCountAggregateOutputType> | number
          }
        }
      }
      reportes: {
        payload: Prisma.$reportesPayload<ExtArgs>
        fields: Prisma.reportesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          findFirst: {
            args: Prisma.reportesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          findMany: {
            args: Prisma.reportesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>[]
          }
          create: {
            args: Prisma.reportesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          createMany: {
            args: Prisma.reportesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reportesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>[]
          }
          delete: {
            args: Prisma.reportesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          update: {
            args: Prisma.reportesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          deleteMany: {
            args: Prisma.reportesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reportesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>[]
          }
          upsert: {
            args: Prisma.reportesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportesPayload>
          }
          aggregate: {
            args: Prisma.ReportesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReportes>
          }
          groupBy: {
            args: Prisma.reportesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportesGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportesCountArgs<ExtArgs>
            result: $Utils.Optional<ReportesCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuariosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      ventas: {
        payload: Prisma.$ventasPayload<ExtArgs>
        fields: Prisma.ventasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ventasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ventasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          findFirst: {
            args: Prisma.ventasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ventasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          findMany: {
            args: Prisma.ventasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>[]
          }
          create: {
            args: Prisma.ventasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          createMany: {
            args: Prisma.ventasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ventasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>[]
          }
          delete: {
            args: Prisma.ventasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          update: {
            args: Prisma.ventasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          deleteMany: {
            args: Prisma.ventasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ventasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ventasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>[]
          }
          upsert: {
            args: Prisma.ventasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ventasPayload>
          }
          aggregate: {
            args: Prisma.VentasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVentas>
          }
          groupBy: {
            args: Prisma.ventasGroupByArgs<ExtArgs>
            result: $Utils.Optional<VentasGroupByOutputType>[]
          }
          count: {
            args: Prisma.ventasCountArgs<ExtArgs>
            result: $Utils.Optional<VentasCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    configuracion?: configuracionOmit
    detalle_ventas?: detalle_ventasOmit
    facturas?: facturasOmit
    movimientos_inventario?: movimientos_inventarioOmit
    productos?: productosOmit
    proveedores?: proveedoresOmit
    reportes?: reportesOmit
    usuarios?: usuariosOmit
    ventas?: ventasOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProductosCountOutputType
   */

  export type ProductosCountOutputType = {
    detalle_ventas: number
    movimientos_inventario: number
  }

  export type ProductosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_ventas?: boolean | ProductosCountOutputTypeCountDetalle_ventasArgs
    movimientos_inventario?: boolean | ProductosCountOutputTypeCountMovimientos_inventarioArgs
  }

  // Custom InputTypes
  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductosCountOutputType
     */
    select?: ProductosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountDetalle_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventasWhereInput
  }

  /**
   * ProductosCountOutputType without action
   */
  export type ProductosCountOutputTypeCountMovimientos_inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: movimientos_inventarioWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    reportes: number
    ventas: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | UsuariosCountOutputTypeCountReportesArgs
    ventas?: boolean | UsuariosCountOutputTypeCountVentasArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountReportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountVentasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
  }


  /**
   * Count Type VentasCountOutputType
   */

  export type VentasCountOutputType = {
    detalle_ventas: number
    facturas: number
  }

  export type VentasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_ventas?: boolean | VentasCountOutputTypeCountDetalle_ventasArgs
    facturas?: boolean | VentasCountOutputTypeCountFacturasArgs
  }

  // Custom InputTypes
  /**
   * VentasCountOutputType without action
   */
  export type VentasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VentasCountOutputType
     */
    select?: VentasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * VentasCountOutputType without action
   */
  export type VentasCountOutputTypeCountDetalle_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventasWhereInput
  }

  /**
   * VentasCountOutputType without action
   */
  export type VentasCountOutputTypeCountFacturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: facturasWhereInput
  }


  /**
   * Models
   */

  /**
   * Model configuracion
   */

  export type AggregateConfiguracion = {
    _count: ConfiguracionCountAggregateOutputType | null
    _avg: ConfiguracionAvgAggregateOutputType | null
    _sum: ConfiguracionSumAggregateOutputType | null
    _min: ConfiguracionMinAggregateOutputType | null
    _max: ConfiguracionMaxAggregateOutputType | null
  }

  export type ConfiguracionAvgAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionSumAggregateOutputType = {
    id: number | null
  }

  export type ConfiguracionMinAggregateOutputType = {
    id: number | null
    clave: string | null
    valor: string | null
  }

  export type ConfiguracionMaxAggregateOutputType = {
    id: number | null
    clave: string | null
    valor: string | null
  }

  export type ConfiguracionCountAggregateOutputType = {
    id: number
    clave: number
    valor: number
    _all: number
  }


  export type ConfiguracionAvgAggregateInputType = {
    id?: true
  }

  export type ConfiguracionSumAggregateInputType = {
    id?: true
  }

  export type ConfiguracionMinAggregateInputType = {
    id?: true
    clave?: true
    valor?: true
  }

  export type ConfiguracionMaxAggregateInputType = {
    id?: true
    clave?: true
    valor?: true
  }

  export type ConfiguracionCountAggregateInputType = {
    id?: true
    clave?: true
    valor?: true
    _all?: true
  }

  export type ConfiguracionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracion to aggregate.
     */
    where?: configuracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracions to fetch.
     */
    orderBy?: configuracionOrderByWithRelationInput | configuracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configuracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configuracions
    **/
    _count?: true | ConfiguracionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfiguracionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfiguracionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfiguracionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfiguracionMaxAggregateInputType
  }

  export type GetConfiguracionAggregateType<T extends ConfiguracionAggregateArgs> = {
        [P in keyof T & keyof AggregateConfiguracion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfiguracion[P]>
      : GetScalarType<T[P], AggregateConfiguracion[P]>
  }




  export type configuracionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configuracionWhereInput
    orderBy?: configuracionOrderByWithAggregationInput | configuracionOrderByWithAggregationInput[]
    by: ConfiguracionScalarFieldEnum[] | ConfiguracionScalarFieldEnum
    having?: configuracionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfiguracionCountAggregateInputType | true
    _avg?: ConfiguracionAvgAggregateInputType
    _sum?: ConfiguracionSumAggregateInputType
    _min?: ConfiguracionMinAggregateInputType
    _max?: ConfiguracionMaxAggregateInputType
  }

  export type ConfiguracionGroupByOutputType = {
    id: number
    clave: string | null
    valor: string | null
    _count: ConfiguracionCountAggregateOutputType | null
    _avg: ConfiguracionAvgAggregateOutputType | null
    _sum: ConfiguracionSumAggregateOutputType | null
    _min: ConfiguracionMinAggregateOutputType | null
    _max: ConfiguracionMaxAggregateOutputType | null
  }

  type GetConfiguracionGroupByPayload<T extends configuracionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfiguracionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfiguracionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfiguracionGroupByOutputType[P]>
            : GetScalarType<T[P], ConfiguracionGroupByOutputType[P]>
        }
      >
    >


  export type configuracionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clave?: boolean
    valor?: boolean
  }, ExtArgs["result"]["configuracion"]>

  export type configuracionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clave?: boolean
    valor?: boolean
  }, ExtArgs["result"]["configuracion"]>

  export type configuracionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    clave?: boolean
    valor?: boolean
  }, ExtArgs["result"]["configuracion"]>

  export type configuracionSelectScalar = {
    id?: boolean
    clave?: boolean
    valor?: boolean
  }

  export type configuracionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "clave" | "valor", ExtArgs["result"]["configuracion"]>

  export type $configuracionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configuracion"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      clave: string | null
      valor: string | null
    }, ExtArgs["result"]["configuracion"]>
    composites: {}
  }

  type configuracionGetPayload<S extends boolean | null | undefined | configuracionDefaultArgs> = $Result.GetResult<Prisma.$configuracionPayload, S>

  type configuracionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configuracionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfiguracionCountAggregateInputType | true
    }

  export interface configuracionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configuracion'], meta: { name: 'configuracion' } }
    /**
     * Find zero or one Configuracion that matches the filter.
     * @param {configuracionFindUniqueArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configuracionFindUniqueArgs>(args: SelectSubset<T, configuracionFindUniqueArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configuracion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configuracionFindUniqueOrThrowArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configuracionFindUniqueOrThrowArgs>(args: SelectSubset<T, configuracionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionFindFirstArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configuracionFindFirstArgs>(args?: SelectSubset<T, configuracionFindFirstArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configuracion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionFindFirstOrThrowArgs} args - Arguments to find a Configuracion
     * @example
     * // Get one Configuracion
     * const configuracion = await prisma.configuracion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configuracionFindFirstOrThrowArgs>(args?: SelectSubset<T, configuracionFindFirstOrThrowArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configuracions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configuracions
     * const configuracions = await prisma.configuracion.findMany()
     * 
     * // Get first 10 Configuracions
     * const configuracions = await prisma.configuracion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configuracionWithIdOnly = await prisma.configuracion.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configuracionFindManyArgs>(args?: SelectSubset<T, configuracionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configuracion.
     * @param {configuracionCreateArgs} args - Arguments to create a Configuracion.
     * @example
     * // Create one Configuracion
     * const Configuracion = await prisma.configuracion.create({
     *   data: {
     *     // ... data to create a Configuracion
     *   }
     * })
     * 
     */
    create<T extends configuracionCreateArgs>(args: SelectSubset<T, configuracionCreateArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configuracions.
     * @param {configuracionCreateManyArgs} args - Arguments to create many Configuracions.
     * @example
     * // Create many Configuracions
     * const configuracion = await prisma.configuracion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configuracionCreateManyArgs>(args?: SelectSubset<T, configuracionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configuracions and returns the data saved in the database.
     * @param {configuracionCreateManyAndReturnArgs} args - Arguments to create many Configuracions.
     * @example
     * // Create many Configuracions
     * const configuracion = await prisma.configuracion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configuracions and only return the `id`
     * const configuracionWithIdOnly = await prisma.configuracion.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configuracionCreateManyAndReturnArgs>(args?: SelectSubset<T, configuracionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configuracion.
     * @param {configuracionDeleteArgs} args - Arguments to delete one Configuracion.
     * @example
     * // Delete one Configuracion
     * const Configuracion = await prisma.configuracion.delete({
     *   where: {
     *     // ... filter to delete one Configuracion
     *   }
     * })
     * 
     */
    delete<T extends configuracionDeleteArgs>(args: SelectSubset<T, configuracionDeleteArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configuracion.
     * @param {configuracionUpdateArgs} args - Arguments to update one Configuracion.
     * @example
     * // Update one Configuracion
     * const configuracion = await prisma.configuracion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configuracionUpdateArgs>(args: SelectSubset<T, configuracionUpdateArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configuracions.
     * @param {configuracionDeleteManyArgs} args - Arguments to filter Configuracions to delete.
     * @example
     * // Delete a few Configuracions
     * const { count } = await prisma.configuracion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configuracionDeleteManyArgs>(args?: SelectSubset<T, configuracionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configuracions
     * const configuracion = await prisma.configuracion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configuracionUpdateManyArgs>(args: SelectSubset<T, configuracionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configuracions and returns the data updated in the database.
     * @param {configuracionUpdateManyAndReturnArgs} args - Arguments to update many Configuracions.
     * @example
     * // Update many Configuracions
     * const configuracion = await prisma.configuracion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configuracions and only return the `id`
     * const configuracionWithIdOnly = await prisma.configuracion.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configuracionUpdateManyAndReturnArgs>(args: SelectSubset<T, configuracionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configuracion.
     * @param {configuracionUpsertArgs} args - Arguments to update or create a Configuracion.
     * @example
     * // Update or create a Configuracion
     * const configuracion = await prisma.configuracion.upsert({
     *   create: {
     *     // ... data to create a Configuracion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configuracion we want to update
     *   }
     * })
     */
    upsert<T extends configuracionUpsertArgs>(args: SelectSubset<T, configuracionUpsertArgs<ExtArgs>>): Prisma__configuracionClient<$Result.GetResult<Prisma.$configuracionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configuracions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionCountArgs} args - Arguments to filter Configuracions to count.
     * @example
     * // Count the number of Configuracions
     * const count = await prisma.configuracion.count({
     *   where: {
     *     // ... the filter for the Configuracions we want to count
     *   }
     * })
    **/
    count<T extends configuracionCountArgs>(
      args?: Subset<T, configuracionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfiguracionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configuracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfiguracionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfiguracionAggregateArgs>(args: Subset<T, ConfiguracionAggregateArgs>): Prisma.PrismaPromise<GetConfiguracionAggregateType<T>>

    /**
     * Group by Configuracion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configuracionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configuracionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configuracionGroupByArgs['orderBy'] }
        : { orderBy?: configuracionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configuracionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfiguracionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configuracion model
   */
  readonly fields: configuracionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configuracion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configuracionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configuracion model
   */
  interface configuracionFieldRefs {
    readonly id: FieldRef<"configuracion", 'Int'>
    readonly clave: FieldRef<"configuracion", 'String'>
    readonly valor: FieldRef<"configuracion", 'String'>
  }
    

  // Custom InputTypes
  /**
   * configuracion findUnique
   */
  export type configuracionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter, which configuracion to fetch.
     */
    where: configuracionWhereUniqueInput
  }

  /**
   * configuracion findUniqueOrThrow
   */
  export type configuracionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter, which configuracion to fetch.
     */
    where: configuracionWhereUniqueInput
  }

  /**
   * configuracion findFirst
   */
  export type configuracionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter, which configuracion to fetch.
     */
    where?: configuracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracions to fetch.
     */
    orderBy?: configuracionOrderByWithRelationInput | configuracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracions.
     */
    cursor?: configuracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracions.
     */
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * configuracion findFirstOrThrow
   */
  export type configuracionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter, which configuracion to fetch.
     */
    where?: configuracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracions to fetch.
     */
    orderBy?: configuracionOrderByWithRelationInput | configuracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configuracions.
     */
    cursor?: configuracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configuracions.
     */
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * configuracion findMany
   */
  export type configuracionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter, which configuracions to fetch.
     */
    where?: configuracionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configuracions to fetch.
     */
    orderBy?: configuracionOrderByWithRelationInput | configuracionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configuracions.
     */
    cursor?: configuracionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configuracions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configuracions.
     */
    skip?: number
    distinct?: ConfiguracionScalarFieldEnum | ConfiguracionScalarFieldEnum[]
  }

  /**
   * configuracion create
   */
  export type configuracionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * The data needed to create a configuracion.
     */
    data?: XOR<configuracionCreateInput, configuracionUncheckedCreateInput>
  }

  /**
   * configuracion createMany
   */
  export type configuracionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configuracions.
     */
    data: configuracionCreateManyInput | configuracionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracion createManyAndReturn
   */
  export type configuracionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * The data used to create many configuracions.
     */
    data: configuracionCreateManyInput | configuracionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configuracion update
   */
  export type configuracionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * The data needed to update a configuracion.
     */
    data: XOR<configuracionUpdateInput, configuracionUncheckedUpdateInput>
    /**
     * Choose, which configuracion to update.
     */
    where: configuracionWhereUniqueInput
  }

  /**
   * configuracion updateMany
   */
  export type configuracionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configuracions.
     */
    data: XOR<configuracionUpdateManyMutationInput, configuracionUncheckedUpdateManyInput>
    /**
     * Filter which configuracions to update
     */
    where?: configuracionWhereInput
    /**
     * Limit how many configuracions to update.
     */
    limit?: number
  }

  /**
   * configuracion updateManyAndReturn
   */
  export type configuracionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * The data used to update configuracions.
     */
    data: XOR<configuracionUpdateManyMutationInput, configuracionUncheckedUpdateManyInput>
    /**
     * Filter which configuracions to update
     */
    where?: configuracionWhereInput
    /**
     * Limit how many configuracions to update.
     */
    limit?: number
  }

  /**
   * configuracion upsert
   */
  export type configuracionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * The filter to search for the configuracion to update in case it exists.
     */
    where: configuracionWhereUniqueInput
    /**
     * In case the configuracion found by the `where` argument doesn't exist, create a new configuracion with this data.
     */
    create: XOR<configuracionCreateInput, configuracionUncheckedCreateInput>
    /**
     * In case the configuracion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configuracionUpdateInput, configuracionUncheckedUpdateInput>
  }

  /**
   * configuracion delete
   */
  export type configuracionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
    /**
     * Filter which configuracion to delete.
     */
    where: configuracionWhereUniqueInput
  }

  /**
   * configuracion deleteMany
   */
  export type configuracionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configuracions to delete
     */
    where?: configuracionWhereInput
    /**
     * Limit how many configuracions to delete.
     */
    limit?: number
  }

  /**
   * configuracion without action
   */
  export type configuracionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configuracion
     */
    select?: configuracionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configuracion
     */
    omit?: configuracionOmit<ExtArgs> | null
  }


  /**
   * Model detalle_ventas
   */

  export type AggregateDetalle_ventas = {
    _count: Detalle_ventasCountAggregateOutputType | null
    _avg: Detalle_ventasAvgAggregateOutputType | null
    _sum: Detalle_ventasSumAggregateOutputType | null
    _min: Detalle_ventasMinAggregateOutputType | null
    _max: Detalle_ventasMaxAggregateOutputType | null
  }

  export type Detalle_ventasAvgAggregateOutputType = {
    id: number | null
    venta_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type Detalle_ventasSumAggregateOutputType = {
    id: number | null
    venta_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type Detalle_ventasMinAggregateOutputType = {
    id: number | null
    venta_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type Detalle_ventasMaxAggregateOutputType = {
    id: number | null
    venta_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
  }

  export type Detalle_ventasCountAggregateOutputType = {
    id: number
    venta_id: number
    producto_id: number
    cantidad: number
    precio_unitario: number
    _all: number
  }


  export type Detalle_ventasAvgAggregateInputType = {
    id?: true
    venta_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventasSumAggregateInputType = {
    id?: true
    venta_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventasMinAggregateInputType = {
    id?: true
    venta_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventasMaxAggregateInputType = {
    id?: true
    venta_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
  }

  export type Detalle_ventasCountAggregateInputType = {
    id?: true
    venta_id?: true
    producto_id?: true
    cantidad?: true
    precio_unitario?: true
    _all?: true
  }

  export type Detalle_ventasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_ventas to aggregate.
     */
    where?: detalle_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_ventas
    **/
    _count?: true | Detalle_ventasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_ventasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_ventasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_ventasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_ventasMaxAggregateInputType
  }

  export type GetDetalle_ventasAggregateType<T extends Detalle_ventasAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_ventas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_ventas[P]>
      : GetScalarType<T[P], AggregateDetalle_ventas[P]>
  }




  export type detalle_ventasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_ventasWhereInput
    orderBy?: detalle_ventasOrderByWithAggregationInput | detalle_ventasOrderByWithAggregationInput[]
    by: Detalle_ventasScalarFieldEnum[] | Detalle_ventasScalarFieldEnum
    having?: detalle_ventasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_ventasCountAggregateInputType | true
    _avg?: Detalle_ventasAvgAggregateInputType
    _sum?: Detalle_ventasSumAggregateInputType
    _min?: Detalle_ventasMinAggregateInputType
    _max?: Detalle_ventasMaxAggregateInputType
  }

  export type Detalle_ventasGroupByOutputType = {
    id: number
    venta_id: number | null
    producto_id: number | null
    cantidad: number | null
    precio_unitario: Decimal | null
    _count: Detalle_ventasCountAggregateOutputType | null
    _avg: Detalle_ventasAvgAggregateOutputType | null
    _sum: Detalle_ventasSumAggregateOutputType | null
    _min: Detalle_ventasMinAggregateOutputType | null
    _max: Detalle_ventasMaxAggregateOutputType | null
  }

  type GetDetalle_ventasGroupByPayload<T extends detalle_ventasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_ventasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_ventasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_ventasGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_ventasGroupByOutputType[P]>
        }
      >
    >


  export type detalle_ventasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_ventas"]>

  export type detalle_ventasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_ventas"]>

  export type detalle_ventasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_ventas"]>

  export type detalle_ventasSelectScalar = {
    id?: boolean
    venta_id?: boolean
    producto_id?: boolean
    cantidad?: boolean
    precio_unitario?: boolean
  }

  export type detalle_ventasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "venta_id" | "producto_id" | "cantidad" | "precio_unitario", ExtArgs["result"]["detalle_ventas"]>
  export type detalle_ventasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }
  export type detalle_ventasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }
  export type detalle_ventasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | detalle_ventas$productosArgs<ExtArgs>
    ventas?: boolean | detalle_ventas$ventasArgs<ExtArgs>
  }

  export type $detalle_ventasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_ventas"
    objects: {
      productos: Prisma.$productosPayload<ExtArgs> | null
      ventas: Prisma.$ventasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      venta_id: number | null
      producto_id: number | null
      cantidad: number | null
      precio_unitario: Prisma.Decimal | null
    }, ExtArgs["result"]["detalle_ventas"]>
    composites: {}
  }

  type detalle_ventasGetPayload<S extends boolean | null | undefined | detalle_ventasDefaultArgs> = $Result.GetResult<Prisma.$detalle_ventasPayload, S>

  type detalle_ventasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_ventasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_ventasCountAggregateInputType | true
    }

  export interface detalle_ventasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_ventas'], meta: { name: 'detalle_ventas' } }
    /**
     * Find zero or one Detalle_ventas that matches the filter.
     * @param {detalle_ventasFindUniqueArgs} args - Arguments to find a Detalle_ventas
     * @example
     * // Get one Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_ventasFindUniqueArgs>(args: SelectSubset<T, detalle_ventasFindUniqueArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_ventas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_ventasFindUniqueOrThrowArgs} args - Arguments to find a Detalle_ventas
     * @example
     * // Get one Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_ventasFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_ventasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasFindFirstArgs} args - Arguments to find a Detalle_ventas
     * @example
     * // Get one Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_ventasFindFirstArgs>(args?: SelectSubset<T, detalle_ventasFindFirstArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_ventas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasFindFirstOrThrowArgs} args - Arguments to find a Detalle_ventas
     * @example
     * // Get one Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_ventasFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_ventasFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findMany()
     * 
     * // Get first 10 Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const detalle_ventasWithIdOnly = await prisma.detalle_ventas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends detalle_ventasFindManyArgs>(args?: SelectSubset<T, detalle_ventasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_ventas.
     * @param {detalle_ventasCreateArgs} args - Arguments to create a Detalle_ventas.
     * @example
     * // Create one Detalle_ventas
     * const Detalle_ventas = await prisma.detalle_ventas.create({
     *   data: {
     *     // ... data to create a Detalle_ventas
     *   }
     * })
     * 
     */
    create<T extends detalle_ventasCreateArgs>(args: SelectSubset<T, detalle_ventasCreateArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_ventas.
     * @param {detalle_ventasCreateManyArgs} args - Arguments to create many Detalle_ventas.
     * @example
     * // Create many Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_ventasCreateManyArgs>(args?: SelectSubset<T, detalle_ventasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_ventas and returns the data saved in the database.
     * @param {detalle_ventasCreateManyAndReturnArgs} args - Arguments to create many Detalle_ventas.
     * @example
     * // Create many Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_ventas and only return the `id`
     * const detalle_ventasWithIdOnly = await prisma.detalle_ventas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_ventasCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_ventasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_ventas.
     * @param {detalle_ventasDeleteArgs} args - Arguments to delete one Detalle_ventas.
     * @example
     * // Delete one Detalle_ventas
     * const Detalle_ventas = await prisma.detalle_ventas.delete({
     *   where: {
     *     // ... filter to delete one Detalle_ventas
     *   }
     * })
     * 
     */
    delete<T extends detalle_ventasDeleteArgs>(args: SelectSubset<T, detalle_ventasDeleteArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_ventas.
     * @param {detalle_ventasUpdateArgs} args - Arguments to update one Detalle_ventas.
     * @example
     * // Update one Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_ventasUpdateArgs>(args: SelectSubset<T, detalle_ventasUpdateArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_ventas.
     * @param {detalle_ventasDeleteManyArgs} args - Arguments to filter Detalle_ventas to delete.
     * @example
     * // Delete a few Detalle_ventas
     * const { count } = await prisma.detalle_ventas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_ventasDeleteManyArgs>(args?: SelectSubset<T, detalle_ventasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_ventasUpdateManyArgs>(args: SelectSubset<T, detalle_ventasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_ventas and returns the data updated in the database.
     * @param {detalle_ventasUpdateManyAndReturnArgs} args - Arguments to update many Detalle_ventas.
     * @example
     * // Update many Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_ventas and only return the `id`
     * const detalle_ventasWithIdOnly = await prisma.detalle_ventas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_ventasUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_ventasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_ventas.
     * @param {detalle_ventasUpsertArgs} args - Arguments to update or create a Detalle_ventas.
     * @example
     * // Update or create a Detalle_ventas
     * const detalle_ventas = await prisma.detalle_ventas.upsert({
     *   create: {
     *     // ... data to create a Detalle_ventas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_ventas we want to update
     *   }
     * })
     */
    upsert<T extends detalle_ventasUpsertArgs>(args: SelectSubset<T, detalle_ventasUpsertArgs<ExtArgs>>): Prisma__detalle_ventasClient<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasCountArgs} args - Arguments to filter Detalle_ventas to count.
     * @example
     * // Count the number of Detalle_ventas
     * const count = await prisma.detalle_ventas.count({
     *   where: {
     *     // ... the filter for the Detalle_ventas we want to count
     *   }
     * })
    **/
    count<T extends detalle_ventasCountArgs>(
      args?: Subset<T, detalle_ventasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_ventasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_ventasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_ventasAggregateArgs>(args: Subset<T, Detalle_ventasAggregateArgs>): Prisma.PrismaPromise<GetDetalle_ventasAggregateType<T>>

    /**
     * Group by Detalle_ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_ventasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_ventasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_ventasGroupByArgs['orderBy'] }
        : { orderBy?: detalle_ventasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_ventasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_ventasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_ventas model
   */
  readonly fields: detalle_ventasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_ventas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_ventasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends detalle_ventas$productosArgs<ExtArgs> = {}>(args?: Subset<T, detalle_ventas$productosArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ventas<T extends detalle_ventas$ventasArgs<ExtArgs> = {}>(args?: Subset<T, detalle_ventas$ventasArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_ventas model
   */
  interface detalle_ventasFieldRefs {
    readonly id: FieldRef<"detalle_ventas", 'Int'>
    readonly venta_id: FieldRef<"detalle_ventas", 'Int'>
    readonly producto_id: FieldRef<"detalle_ventas", 'Int'>
    readonly cantidad: FieldRef<"detalle_ventas", 'Int'>
    readonly precio_unitario: FieldRef<"detalle_ventas", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * detalle_ventas findUnique
   */
  export type detalle_ventasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where: detalle_ventasWhereUniqueInput
  }

  /**
   * detalle_ventas findUniqueOrThrow
   */
  export type detalle_ventasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where: detalle_ventasWhereUniqueInput
  }

  /**
   * detalle_ventas findFirst
   */
  export type detalle_ventasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where?: detalle_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_ventas.
     */
    cursor?: detalle_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_ventas.
     */
    distinct?: Detalle_ventasScalarFieldEnum | Detalle_ventasScalarFieldEnum[]
  }

  /**
   * detalle_ventas findFirstOrThrow
   */
  export type detalle_ventasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where?: detalle_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_ventas.
     */
    cursor?: detalle_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_ventas.
     */
    distinct?: Detalle_ventasScalarFieldEnum | Detalle_ventasScalarFieldEnum[]
  }

  /**
   * detalle_ventas findMany
   */
  export type detalle_ventasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_ventas to fetch.
     */
    where?: detalle_ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_ventas to fetch.
     */
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_ventas.
     */
    cursor?: detalle_ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_ventas.
     */
    skip?: number
    distinct?: Detalle_ventasScalarFieldEnum | Detalle_ventasScalarFieldEnum[]
  }

  /**
   * detalle_ventas create
   */
  export type detalle_ventasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_ventas.
     */
    data?: XOR<detalle_ventasCreateInput, detalle_ventasUncheckedCreateInput>
  }

  /**
   * detalle_ventas createMany
   */
  export type detalle_ventasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_ventas.
     */
    data: detalle_ventasCreateManyInput | detalle_ventasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_ventas createManyAndReturn
   */
  export type detalle_ventasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_ventas.
     */
    data: detalle_ventasCreateManyInput | detalle_ventasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_ventas update
   */
  export type detalle_ventasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_ventas.
     */
    data: XOR<detalle_ventasUpdateInput, detalle_ventasUncheckedUpdateInput>
    /**
     * Choose, which detalle_ventas to update.
     */
    where: detalle_ventasWhereUniqueInput
  }

  /**
   * detalle_ventas updateMany
   */
  export type detalle_ventasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_ventas.
     */
    data: XOR<detalle_ventasUpdateManyMutationInput, detalle_ventasUncheckedUpdateManyInput>
    /**
     * Filter which detalle_ventas to update
     */
    where?: detalle_ventasWhereInput
    /**
     * Limit how many detalle_ventas to update.
     */
    limit?: number
  }

  /**
   * detalle_ventas updateManyAndReturn
   */
  export type detalle_ventasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * The data used to update detalle_ventas.
     */
    data: XOR<detalle_ventasUpdateManyMutationInput, detalle_ventasUncheckedUpdateManyInput>
    /**
     * Filter which detalle_ventas to update
     */
    where?: detalle_ventasWhereInput
    /**
     * Limit how many detalle_ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_ventas upsert
   */
  export type detalle_ventasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_ventas to update in case it exists.
     */
    where: detalle_ventasWhereUniqueInput
    /**
     * In case the detalle_ventas found by the `where` argument doesn't exist, create a new detalle_ventas with this data.
     */
    create: XOR<detalle_ventasCreateInput, detalle_ventasUncheckedCreateInput>
    /**
     * In case the detalle_ventas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_ventasUpdateInput, detalle_ventasUncheckedUpdateInput>
  }

  /**
   * detalle_ventas delete
   */
  export type detalle_ventasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    /**
     * Filter which detalle_ventas to delete.
     */
    where: detalle_ventasWhereUniqueInput
  }

  /**
   * detalle_ventas deleteMany
   */
  export type detalle_ventasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_ventas to delete
     */
    where?: detalle_ventasWhereInput
    /**
     * Limit how many detalle_ventas to delete.
     */
    limit?: number
  }

  /**
   * detalle_ventas.productos
   */
  export type detalle_ventas$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    where?: productosWhereInput
  }

  /**
   * detalle_ventas.ventas
   */
  export type detalle_ventas$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
  }

  /**
   * detalle_ventas without action
   */
  export type detalle_ventasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
  }


  /**
   * Model facturas
   */

  export type AggregateFacturas = {
    _count: FacturasCountAggregateOutputType | null
    _avg: FacturasAvgAggregateOutputType | null
    _sum: FacturasSumAggregateOutputType | null
    _min: FacturasMinAggregateOutputType | null
    _max: FacturasMaxAggregateOutputType | null
  }

  export type FacturasAvgAggregateOutputType = {
    id: number | null
    venta_id: number | null
    total: Decimal | null
  }

  export type FacturasSumAggregateOutputType = {
    id: number | null
    venta_id: number | null
    total: Decimal | null
  }

  export type FacturasMinAggregateOutputType = {
    id: number | null
    venta_id: number | null
    folio: string | null
    total: Decimal | null
    fecha: Date | null
  }

  export type FacturasMaxAggregateOutputType = {
    id: number | null
    venta_id: number | null
    folio: string | null
    total: Decimal | null
    fecha: Date | null
  }

  export type FacturasCountAggregateOutputType = {
    id: number
    venta_id: number
    folio: number
    total: number
    fecha: number
    _all: number
  }


  export type FacturasAvgAggregateInputType = {
    id?: true
    venta_id?: true
    total?: true
  }

  export type FacturasSumAggregateInputType = {
    id?: true
    venta_id?: true
    total?: true
  }

  export type FacturasMinAggregateInputType = {
    id?: true
    venta_id?: true
    folio?: true
    total?: true
    fecha?: true
  }

  export type FacturasMaxAggregateInputType = {
    id?: true
    venta_id?: true
    folio?: true
    total?: true
    fecha?: true
  }

  export type FacturasCountAggregateInputType = {
    id?: true
    venta_id?: true
    folio?: true
    total?: true
    fecha?: true
    _all?: true
  }

  export type FacturasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which facturas to aggregate.
     */
    where?: facturasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of facturas to fetch.
     */
    orderBy?: facturasOrderByWithRelationInput | facturasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: facturasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned facturas
    **/
    _count?: true | FacturasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FacturasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FacturasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FacturasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FacturasMaxAggregateInputType
  }

  export type GetFacturasAggregateType<T extends FacturasAggregateArgs> = {
        [P in keyof T & keyof AggregateFacturas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFacturas[P]>
      : GetScalarType<T[P], AggregateFacturas[P]>
  }




  export type facturasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: facturasWhereInput
    orderBy?: facturasOrderByWithAggregationInput | facturasOrderByWithAggregationInput[]
    by: FacturasScalarFieldEnum[] | FacturasScalarFieldEnum
    having?: facturasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FacturasCountAggregateInputType | true
    _avg?: FacturasAvgAggregateInputType
    _sum?: FacturasSumAggregateInputType
    _min?: FacturasMinAggregateInputType
    _max?: FacturasMaxAggregateInputType
  }

  export type FacturasGroupByOutputType = {
    id: number
    venta_id: number | null
    folio: string | null
    total: Decimal | null
    fecha: Date | null
    _count: FacturasCountAggregateOutputType | null
    _avg: FacturasAvgAggregateOutputType | null
    _sum: FacturasSumAggregateOutputType | null
    _min: FacturasMinAggregateOutputType | null
    _max: FacturasMaxAggregateOutputType | null
  }

  type GetFacturasGroupByPayload<T extends facturasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FacturasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FacturasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FacturasGroupByOutputType[P]>
            : GetScalarType<T[P], FacturasGroupByOutputType[P]>
        }
      >
    >


  export type facturasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    folio?: boolean
    total?: boolean
    fecha?: boolean
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["facturas"]>

  export type facturasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    folio?: boolean
    total?: boolean
    fecha?: boolean
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["facturas"]>

  export type facturasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    venta_id?: boolean
    folio?: boolean
    total?: boolean
    fecha?: boolean
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }, ExtArgs["result"]["facturas"]>

  export type facturasSelectScalar = {
    id?: boolean
    venta_id?: boolean
    folio?: boolean
    total?: boolean
    fecha?: boolean
  }

  export type facturasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "venta_id" | "folio" | "total" | "fecha", ExtArgs["result"]["facturas"]>
  export type facturasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }
  export type facturasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }
  export type facturasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ventas?: boolean | facturas$ventasArgs<ExtArgs>
  }

  export type $facturasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "facturas"
    objects: {
      ventas: Prisma.$ventasPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      venta_id: number | null
      folio: string | null
      total: Prisma.Decimal | null
      fecha: Date | null
    }, ExtArgs["result"]["facturas"]>
    composites: {}
  }

  type facturasGetPayload<S extends boolean | null | undefined | facturasDefaultArgs> = $Result.GetResult<Prisma.$facturasPayload, S>

  type facturasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<facturasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FacturasCountAggregateInputType | true
    }

  export interface facturasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['facturas'], meta: { name: 'facturas' } }
    /**
     * Find zero or one Facturas that matches the filter.
     * @param {facturasFindUniqueArgs} args - Arguments to find a Facturas
     * @example
     * // Get one Facturas
     * const facturas = await prisma.facturas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends facturasFindUniqueArgs>(args: SelectSubset<T, facturasFindUniqueArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Facturas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {facturasFindUniqueOrThrowArgs} args - Arguments to find a Facturas
     * @example
     * // Get one Facturas
     * const facturas = await prisma.facturas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends facturasFindUniqueOrThrowArgs>(args: SelectSubset<T, facturasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Facturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasFindFirstArgs} args - Arguments to find a Facturas
     * @example
     * // Get one Facturas
     * const facturas = await prisma.facturas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends facturasFindFirstArgs>(args?: SelectSubset<T, facturasFindFirstArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Facturas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasFindFirstOrThrowArgs} args - Arguments to find a Facturas
     * @example
     * // Get one Facturas
     * const facturas = await prisma.facturas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends facturasFindFirstOrThrowArgs>(args?: SelectSubset<T, facturasFindFirstOrThrowArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Facturas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Facturas
     * const facturas = await prisma.facturas.findMany()
     * 
     * // Get first 10 Facturas
     * const facturas = await prisma.facturas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const facturasWithIdOnly = await prisma.facturas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends facturasFindManyArgs>(args?: SelectSubset<T, facturasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Facturas.
     * @param {facturasCreateArgs} args - Arguments to create a Facturas.
     * @example
     * // Create one Facturas
     * const Facturas = await prisma.facturas.create({
     *   data: {
     *     // ... data to create a Facturas
     *   }
     * })
     * 
     */
    create<T extends facturasCreateArgs>(args: SelectSubset<T, facturasCreateArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Facturas.
     * @param {facturasCreateManyArgs} args - Arguments to create many Facturas.
     * @example
     * // Create many Facturas
     * const facturas = await prisma.facturas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends facturasCreateManyArgs>(args?: SelectSubset<T, facturasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Facturas and returns the data saved in the database.
     * @param {facturasCreateManyAndReturnArgs} args - Arguments to create many Facturas.
     * @example
     * // Create many Facturas
     * const facturas = await prisma.facturas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Facturas and only return the `id`
     * const facturasWithIdOnly = await prisma.facturas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends facturasCreateManyAndReturnArgs>(args?: SelectSubset<T, facturasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Facturas.
     * @param {facturasDeleteArgs} args - Arguments to delete one Facturas.
     * @example
     * // Delete one Facturas
     * const Facturas = await prisma.facturas.delete({
     *   where: {
     *     // ... filter to delete one Facturas
     *   }
     * })
     * 
     */
    delete<T extends facturasDeleteArgs>(args: SelectSubset<T, facturasDeleteArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Facturas.
     * @param {facturasUpdateArgs} args - Arguments to update one Facturas.
     * @example
     * // Update one Facturas
     * const facturas = await prisma.facturas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends facturasUpdateArgs>(args: SelectSubset<T, facturasUpdateArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Facturas.
     * @param {facturasDeleteManyArgs} args - Arguments to filter Facturas to delete.
     * @example
     * // Delete a few Facturas
     * const { count } = await prisma.facturas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends facturasDeleteManyArgs>(args?: SelectSubset<T, facturasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Facturas
     * const facturas = await prisma.facturas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends facturasUpdateManyArgs>(args: SelectSubset<T, facturasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Facturas and returns the data updated in the database.
     * @param {facturasUpdateManyAndReturnArgs} args - Arguments to update many Facturas.
     * @example
     * // Update many Facturas
     * const facturas = await prisma.facturas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Facturas and only return the `id`
     * const facturasWithIdOnly = await prisma.facturas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends facturasUpdateManyAndReturnArgs>(args: SelectSubset<T, facturasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Facturas.
     * @param {facturasUpsertArgs} args - Arguments to update or create a Facturas.
     * @example
     * // Update or create a Facturas
     * const facturas = await prisma.facturas.upsert({
     *   create: {
     *     // ... data to create a Facturas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Facturas we want to update
     *   }
     * })
     */
    upsert<T extends facturasUpsertArgs>(args: SelectSubset<T, facturasUpsertArgs<ExtArgs>>): Prisma__facturasClient<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasCountArgs} args - Arguments to filter Facturas to count.
     * @example
     * // Count the number of Facturas
     * const count = await prisma.facturas.count({
     *   where: {
     *     // ... the filter for the Facturas we want to count
     *   }
     * })
    **/
    count<T extends facturasCountArgs>(
      args?: Subset<T, facturasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FacturasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FacturasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FacturasAggregateArgs>(args: Subset<T, FacturasAggregateArgs>): Prisma.PrismaPromise<GetFacturasAggregateType<T>>

    /**
     * Group by Facturas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {facturasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends facturasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: facturasGroupByArgs['orderBy'] }
        : { orderBy?: facturasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, facturasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFacturasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the facturas model
   */
  readonly fields: facturasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for facturas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__facturasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ventas<T extends facturas$ventasArgs<ExtArgs> = {}>(args?: Subset<T, facturas$ventasArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the facturas model
   */
  interface facturasFieldRefs {
    readonly id: FieldRef<"facturas", 'Int'>
    readonly venta_id: FieldRef<"facturas", 'Int'>
    readonly folio: FieldRef<"facturas", 'String'>
    readonly total: FieldRef<"facturas", 'Decimal'>
    readonly fecha: FieldRef<"facturas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * facturas findUnique
   */
  export type facturasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter, which facturas to fetch.
     */
    where: facturasWhereUniqueInput
  }

  /**
   * facturas findUniqueOrThrow
   */
  export type facturasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter, which facturas to fetch.
     */
    where: facturasWhereUniqueInput
  }

  /**
   * facturas findFirst
   */
  export type facturasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter, which facturas to fetch.
     */
    where?: facturasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of facturas to fetch.
     */
    orderBy?: facturasOrderByWithRelationInput | facturasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for facturas.
     */
    cursor?: facturasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of facturas.
     */
    distinct?: FacturasScalarFieldEnum | FacturasScalarFieldEnum[]
  }

  /**
   * facturas findFirstOrThrow
   */
  export type facturasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter, which facturas to fetch.
     */
    where?: facturasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of facturas to fetch.
     */
    orderBy?: facturasOrderByWithRelationInput | facturasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for facturas.
     */
    cursor?: facturasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` facturas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of facturas.
     */
    distinct?: FacturasScalarFieldEnum | FacturasScalarFieldEnum[]
  }

  /**
   * facturas findMany
   */
  export type facturasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter, which facturas to fetch.
     */
    where?: facturasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of facturas to fetch.
     */
    orderBy?: facturasOrderByWithRelationInput | facturasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing facturas.
     */
    cursor?: facturasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` facturas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` facturas.
     */
    skip?: number
    distinct?: FacturasScalarFieldEnum | FacturasScalarFieldEnum[]
  }

  /**
   * facturas create
   */
  export type facturasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * The data needed to create a facturas.
     */
    data?: XOR<facturasCreateInput, facturasUncheckedCreateInput>
  }

  /**
   * facturas createMany
   */
  export type facturasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many facturas.
     */
    data: facturasCreateManyInput | facturasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * facturas createManyAndReturn
   */
  export type facturasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * The data used to create many facturas.
     */
    data: facturasCreateManyInput | facturasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * facturas update
   */
  export type facturasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * The data needed to update a facturas.
     */
    data: XOR<facturasUpdateInput, facturasUncheckedUpdateInput>
    /**
     * Choose, which facturas to update.
     */
    where: facturasWhereUniqueInput
  }

  /**
   * facturas updateMany
   */
  export type facturasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update facturas.
     */
    data: XOR<facturasUpdateManyMutationInput, facturasUncheckedUpdateManyInput>
    /**
     * Filter which facturas to update
     */
    where?: facturasWhereInput
    /**
     * Limit how many facturas to update.
     */
    limit?: number
  }

  /**
   * facturas updateManyAndReturn
   */
  export type facturasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * The data used to update facturas.
     */
    data: XOR<facturasUpdateManyMutationInput, facturasUncheckedUpdateManyInput>
    /**
     * Filter which facturas to update
     */
    where?: facturasWhereInput
    /**
     * Limit how many facturas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * facturas upsert
   */
  export type facturasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * The filter to search for the facturas to update in case it exists.
     */
    where: facturasWhereUniqueInput
    /**
     * In case the facturas found by the `where` argument doesn't exist, create a new facturas with this data.
     */
    create: XOR<facturasCreateInput, facturasUncheckedCreateInput>
    /**
     * In case the facturas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<facturasUpdateInput, facturasUncheckedUpdateInput>
  }

  /**
   * facturas delete
   */
  export type facturasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    /**
     * Filter which facturas to delete.
     */
    where: facturasWhereUniqueInput
  }

  /**
   * facturas deleteMany
   */
  export type facturasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which facturas to delete
     */
    where?: facturasWhereInput
    /**
     * Limit how many facturas to delete.
     */
    limit?: number
  }

  /**
   * facturas.ventas
   */
  export type facturas$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
  }

  /**
   * facturas without action
   */
  export type facturasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
  }


  /**
   * Model movimientos_inventario
   */

  export type AggregateMovimientos_inventario = {
    _count: Movimientos_inventarioCountAggregateOutputType | null
    _avg: Movimientos_inventarioAvgAggregateOutputType | null
    _sum: Movimientos_inventarioSumAggregateOutputType | null
    _min: Movimientos_inventarioMinAggregateOutputType | null
    _max: Movimientos_inventarioMaxAggregateOutputType | null
  }

  export type Movimientos_inventarioAvgAggregateOutputType = {
    id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type Movimientos_inventarioSumAggregateOutputType = {
    id: number | null
    producto_id: number | null
    cantidad: number | null
  }

  export type Movimientos_inventarioMinAggregateOutputType = {
    id: number | null
    producto_id: number | null
    tipo: string | null
    cantidad: number | null
    observacion: string | null
    fecha: Date | null
  }

  export type Movimientos_inventarioMaxAggregateOutputType = {
    id: number | null
    producto_id: number | null
    tipo: string | null
    cantidad: number | null
    observacion: string | null
    fecha: Date | null
  }

  export type Movimientos_inventarioCountAggregateOutputType = {
    id: number
    producto_id: number
    tipo: number
    cantidad: number
    observacion: number
    fecha: number
    _all: number
  }


  export type Movimientos_inventarioAvgAggregateInputType = {
    id?: true
    producto_id?: true
    cantidad?: true
  }

  export type Movimientos_inventarioSumAggregateInputType = {
    id?: true
    producto_id?: true
    cantidad?: true
  }

  export type Movimientos_inventarioMinAggregateInputType = {
    id?: true
    producto_id?: true
    tipo?: true
    cantidad?: true
    observacion?: true
    fecha?: true
  }

  export type Movimientos_inventarioMaxAggregateInputType = {
    id?: true
    producto_id?: true
    tipo?: true
    cantidad?: true
    observacion?: true
    fecha?: true
  }

  export type Movimientos_inventarioCountAggregateInputType = {
    id?: true
    producto_id?: true
    tipo?: true
    cantidad?: true
    observacion?: true
    fecha?: true
    _all?: true
  }

  export type Movimientos_inventarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which movimientos_inventario to aggregate.
     */
    where?: movimientos_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimientos_inventarios to fetch.
     */
    orderBy?: movimientos_inventarioOrderByWithRelationInput | movimientos_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: movimientos_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimientos_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimientos_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned movimientos_inventarios
    **/
    _count?: true | Movimientos_inventarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Movimientos_inventarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Movimientos_inventarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Movimientos_inventarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Movimientos_inventarioMaxAggregateInputType
  }

  export type GetMovimientos_inventarioAggregateType<T extends Movimientos_inventarioAggregateArgs> = {
        [P in keyof T & keyof AggregateMovimientos_inventario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMovimientos_inventario[P]>
      : GetScalarType<T[P], AggregateMovimientos_inventario[P]>
  }




  export type movimientos_inventarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: movimientos_inventarioWhereInput
    orderBy?: movimientos_inventarioOrderByWithAggregationInput | movimientos_inventarioOrderByWithAggregationInput[]
    by: Movimientos_inventarioScalarFieldEnum[] | Movimientos_inventarioScalarFieldEnum
    having?: movimientos_inventarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Movimientos_inventarioCountAggregateInputType | true
    _avg?: Movimientos_inventarioAvgAggregateInputType
    _sum?: Movimientos_inventarioSumAggregateInputType
    _min?: Movimientos_inventarioMinAggregateInputType
    _max?: Movimientos_inventarioMaxAggregateInputType
  }

  export type Movimientos_inventarioGroupByOutputType = {
    id: number
    producto_id: number | null
    tipo: string | null
    cantidad: number | null
    observacion: string | null
    fecha: Date | null
    _count: Movimientos_inventarioCountAggregateOutputType | null
    _avg: Movimientos_inventarioAvgAggregateOutputType | null
    _sum: Movimientos_inventarioSumAggregateOutputType | null
    _min: Movimientos_inventarioMinAggregateOutputType | null
    _max: Movimientos_inventarioMaxAggregateOutputType | null
  }

  type GetMovimientos_inventarioGroupByPayload<T extends movimientos_inventarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Movimientos_inventarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Movimientos_inventarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Movimientos_inventarioGroupByOutputType[P]>
            : GetScalarType<T[P], Movimientos_inventarioGroupByOutputType[P]>
        }
      >
    >


  export type movimientos_inventarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    tipo?: boolean
    cantidad?: boolean
    observacion?: boolean
    fecha?: boolean
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }, ExtArgs["result"]["movimientos_inventario"]>

  export type movimientos_inventarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    tipo?: boolean
    cantidad?: boolean
    observacion?: boolean
    fecha?: boolean
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }, ExtArgs["result"]["movimientos_inventario"]>

  export type movimientos_inventarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    producto_id?: boolean
    tipo?: boolean
    cantidad?: boolean
    observacion?: boolean
    fecha?: boolean
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }, ExtArgs["result"]["movimientos_inventario"]>

  export type movimientos_inventarioSelectScalar = {
    id?: boolean
    producto_id?: boolean
    tipo?: boolean
    cantidad?: boolean
    observacion?: boolean
    fecha?: boolean
  }

  export type movimientos_inventarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "producto_id" | "tipo" | "cantidad" | "observacion" | "fecha", ExtArgs["result"]["movimientos_inventario"]>
  export type movimientos_inventarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }
  export type movimientos_inventarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }
  export type movimientos_inventarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productos?: boolean | movimientos_inventario$productosArgs<ExtArgs>
  }

  export type $movimientos_inventarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "movimientos_inventario"
    objects: {
      productos: Prisma.$productosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      producto_id: number | null
      tipo: string | null
      cantidad: number | null
      observacion: string | null
      fecha: Date | null
    }, ExtArgs["result"]["movimientos_inventario"]>
    composites: {}
  }

  type movimientos_inventarioGetPayload<S extends boolean | null | undefined | movimientos_inventarioDefaultArgs> = $Result.GetResult<Prisma.$movimientos_inventarioPayload, S>

  type movimientos_inventarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<movimientos_inventarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Movimientos_inventarioCountAggregateInputType | true
    }

  export interface movimientos_inventarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['movimientos_inventario'], meta: { name: 'movimientos_inventario' } }
    /**
     * Find zero or one Movimientos_inventario that matches the filter.
     * @param {movimientos_inventarioFindUniqueArgs} args - Arguments to find a Movimientos_inventario
     * @example
     * // Get one Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends movimientos_inventarioFindUniqueArgs>(args: SelectSubset<T, movimientos_inventarioFindUniqueArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Movimientos_inventario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {movimientos_inventarioFindUniqueOrThrowArgs} args - Arguments to find a Movimientos_inventario
     * @example
     * // Get one Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends movimientos_inventarioFindUniqueOrThrowArgs>(args: SelectSubset<T, movimientos_inventarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movimientos_inventario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioFindFirstArgs} args - Arguments to find a Movimientos_inventario
     * @example
     * // Get one Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends movimientos_inventarioFindFirstArgs>(args?: SelectSubset<T, movimientos_inventarioFindFirstArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Movimientos_inventario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioFindFirstOrThrowArgs} args - Arguments to find a Movimientos_inventario
     * @example
     * // Get one Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends movimientos_inventarioFindFirstOrThrowArgs>(args?: SelectSubset<T, movimientos_inventarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Movimientos_inventarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Movimientos_inventarios
     * const movimientos_inventarios = await prisma.movimientos_inventario.findMany()
     * 
     * // Get first 10 Movimientos_inventarios
     * const movimientos_inventarios = await prisma.movimientos_inventario.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const movimientos_inventarioWithIdOnly = await prisma.movimientos_inventario.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends movimientos_inventarioFindManyArgs>(args?: SelectSubset<T, movimientos_inventarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Movimientos_inventario.
     * @param {movimientos_inventarioCreateArgs} args - Arguments to create a Movimientos_inventario.
     * @example
     * // Create one Movimientos_inventario
     * const Movimientos_inventario = await prisma.movimientos_inventario.create({
     *   data: {
     *     // ... data to create a Movimientos_inventario
     *   }
     * })
     * 
     */
    create<T extends movimientos_inventarioCreateArgs>(args: SelectSubset<T, movimientos_inventarioCreateArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Movimientos_inventarios.
     * @param {movimientos_inventarioCreateManyArgs} args - Arguments to create many Movimientos_inventarios.
     * @example
     * // Create many Movimientos_inventarios
     * const movimientos_inventario = await prisma.movimientos_inventario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends movimientos_inventarioCreateManyArgs>(args?: SelectSubset<T, movimientos_inventarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Movimientos_inventarios and returns the data saved in the database.
     * @param {movimientos_inventarioCreateManyAndReturnArgs} args - Arguments to create many Movimientos_inventarios.
     * @example
     * // Create many Movimientos_inventarios
     * const movimientos_inventario = await prisma.movimientos_inventario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Movimientos_inventarios and only return the `id`
     * const movimientos_inventarioWithIdOnly = await prisma.movimientos_inventario.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends movimientos_inventarioCreateManyAndReturnArgs>(args?: SelectSubset<T, movimientos_inventarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Movimientos_inventario.
     * @param {movimientos_inventarioDeleteArgs} args - Arguments to delete one Movimientos_inventario.
     * @example
     * // Delete one Movimientos_inventario
     * const Movimientos_inventario = await prisma.movimientos_inventario.delete({
     *   where: {
     *     // ... filter to delete one Movimientos_inventario
     *   }
     * })
     * 
     */
    delete<T extends movimientos_inventarioDeleteArgs>(args: SelectSubset<T, movimientos_inventarioDeleteArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Movimientos_inventario.
     * @param {movimientos_inventarioUpdateArgs} args - Arguments to update one Movimientos_inventario.
     * @example
     * // Update one Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends movimientos_inventarioUpdateArgs>(args: SelectSubset<T, movimientos_inventarioUpdateArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Movimientos_inventarios.
     * @param {movimientos_inventarioDeleteManyArgs} args - Arguments to filter Movimientos_inventarios to delete.
     * @example
     * // Delete a few Movimientos_inventarios
     * const { count } = await prisma.movimientos_inventario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends movimientos_inventarioDeleteManyArgs>(args?: SelectSubset<T, movimientos_inventarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movimientos_inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Movimientos_inventarios
     * const movimientos_inventario = await prisma.movimientos_inventario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends movimientos_inventarioUpdateManyArgs>(args: SelectSubset<T, movimientos_inventarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Movimientos_inventarios and returns the data updated in the database.
     * @param {movimientos_inventarioUpdateManyAndReturnArgs} args - Arguments to update many Movimientos_inventarios.
     * @example
     * // Update many Movimientos_inventarios
     * const movimientos_inventario = await prisma.movimientos_inventario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Movimientos_inventarios and only return the `id`
     * const movimientos_inventarioWithIdOnly = await prisma.movimientos_inventario.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends movimientos_inventarioUpdateManyAndReturnArgs>(args: SelectSubset<T, movimientos_inventarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Movimientos_inventario.
     * @param {movimientos_inventarioUpsertArgs} args - Arguments to update or create a Movimientos_inventario.
     * @example
     * // Update or create a Movimientos_inventario
     * const movimientos_inventario = await prisma.movimientos_inventario.upsert({
     *   create: {
     *     // ... data to create a Movimientos_inventario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Movimientos_inventario we want to update
     *   }
     * })
     */
    upsert<T extends movimientos_inventarioUpsertArgs>(args: SelectSubset<T, movimientos_inventarioUpsertArgs<ExtArgs>>): Prisma__movimientos_inventarioClient<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Movimientos_inventarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioCountArgs} args - Arguments to filter Movimientos_inventarios to count.
     * @example
     * // Count the number of Movimientos_inventarios
     * const count = await prisma.movimientos_inventario.count({
     *   where: {
     *     // ... the filter for the Movimientos_inventarios we want to count
     *   }
     * })
    **/
    count<T extends movimientos_inventarioCountArgs>(
      args?: Subset<T, movimientos_inventarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Movimientos_inventarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Movimientos_inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Movimientos_inventarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Movimientos_inventarioAggregateArgs>(args: Subset<T, Movimientos_inventarioAggregateArgs>): Prisma.PrismaPromise<GetMovimientos_inventarioAggregateType<T>>

    /**
     * Group by Movimientos_inventario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {movimientos_inventarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends movimientos_inventarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: movimientos_inventarioGroupByArgs['orderBy'] }
        : { orderBy?: movimientos_inventarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, movimientos_inventarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimientos_inventarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the movimientos_inventario model
   */
  readonly fields: movimientos_inventarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for movimientos_inventario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__movimientos_inventarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productos<T extends movimientos_inventario$productosArgs<ExtArgs> = {}>(args?: Subset<T, movimientos_inventario$productosArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the movimientos_inventario model
   */
  interface movimientos_inventarioFieldRefs {
    readonly id: FieldRef<"movimientos_inventario", 'Int'>
    readonly producto_id: FieldRef<"movimientos_inventario", 'Int'>
    readonly tipo: FieldRef<"movimientos_inventario", 'String'>
    readonly cantidad: FieldRef<"movimientos_inventario", 'Int'>
    readonly observacion: FieldRef<"movimientos_inventario", 'String'>
    readonly fecha: FieldRef<"movimientos_inventario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * movimientos_inventario findUnique
   */
  export type movimientos_inventarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which movimientos_inventario to fetch.
     */
    where: movimientos_inventarioWhereUniqueInput
  }

  /**
   * movimientos_inventario findUniqueOrThrow
   */
  export type movimientos_inventarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which movimientos_inventario to fetch.
     */
    where: movimientos_inventarioWhereUniqueInput
  }

  /**
   * movimientos_inventario findFirst
   */
  export type movimientos_inventarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which movimientos_inventario to fetch.
     */
    where?: movimientos_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimientos_inventarios to fetch.
     */
    orderBy?: movimientos_inventarioOrderByWithRelationInput | movimientos_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for movimientos_inventarios.
     */
    cursor?: movimientos_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimientos_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimientos_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of movimientos_inventarios.
     */
    distinct?: Movimientos_inventarioScalarFieldEnum | Movimientos_inventarioScalarFieldEnum[]
  }

  /**
   * movimientos_inventario findFirstOrThrow
   */
  export type movimientos_inventarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which movimientos_inventario to fetch.
     */
    where?: movimientos_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimientos_inventarios to fetch.
     */
    orderBy?: movimientos_inventarioOrderByWithRelationInput | movimientos_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for movimientos_inventarios.
     */
    cursor?: movimientos_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimientos_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimientos_inventarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of movimientos_inventarios.
     */
    distinct?: Movimientos_inventarioScalarFieldEnum | Movimientos_inventarioScalarFieldEnum[]
  }

  /**
   * movimientos_inventario findMany
   */
  export type movimientos_inventarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter, which movimientos_inventarios to fetch.
     */
    where?: movimientos_inventarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of movimientos_inventarios to fetch.
     */
    orderBy?: movimientos_inventarioOrderByWithRelationInput | movimientos_inventarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing movimientos_inventarios.
     */
    cursor?: movimientos_inventarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` movimientos_inventarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` movimientos_inventarios.
     */
    skip?: number
    distinct?: Movimientos_inventarioScalarFieldEnum | Movimientos_inventarioScalarFieldEnum[]
  }

  /**
   * movimientos_inventario create
   */
  export type movimientos_inventarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * The data needed to create a movimientos_inventario.
     */
    data?: XOR<movimientos_inventarioCreateInput, movimientos_inventarioUncheckedCreateInput>
  }

  /**
   * movimientos_inventario createMany
   */
  export type movimientos_inventarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many movimientos_inventarios.
     */
    data: movimientos_inventarioCreateManyInput | movimientos_inventarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * movimientos_inventario createManyAndReturn
   */
  export type movimientos_inventarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * The data used to create many movimientos_inventarios.
     */
    data: movimientos_inventarioCreateManyInput | movimientos_inventarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * movimientos_inventario update
   */
  export type movimientos_inventarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * The data needed to update a movimientos_inventario.
     */
    data: XOR<movimientos_inventarioUpdateInput, movimientos_inventarioUncheckedUpdateInput>
    /**
     * Choose, which movimientos_inventario to update.
     */
    where: movimientos_inventarioWhereUniqueInput
  }

  /**
   * movimientos_inventario updateMany
   */
  export type movimientos_inventarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update movimientos_inventarios.
     */
    data: XOR<movimientos_inventarioUpdateManyMutationInput, movimientos_inventarioUncheckedUpdateManyInput>
    /**
     * Filter which movimientos_inventarios to update
     */
    where?: movimientos_inventarioWhereInput
    /**
     * Limit how many movimientos_inventarios to update.
     */
    limit?: number
  }

  /**
   * movimientos_inventario updateManyAndReturn
   */
  export type movimientos_inventarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * The data used to update movimientos_inventarios.
     */
    data: XOR<movimientos_inventarioUpdateManyMutationInput, movimientos_inventarioUncheckedUpdateManyInput>
    /**
     * Filter which movimientos_inventarios to update
     */
    where?: movimientos_inventarioWhereInput
    /**
     * Limit how many movimientos_inventarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * movimientos_inventario upsert
   */
  export type movimientos_inventarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * The filter to search for the movimientos_inventario to update in case it exists.
     */
    where: movimientos_inventarioWhereUniqueInput
    /**
     * In case the movimientos_inventario found by the `where` argument doesn't exist, create a new movimientos_inventario with this data.
     */
    create: XOR<movimientos_inventarioCreateInput, movimientos_inventarioUncheckedCreateInput>
    /**
     * In case the movimientos_inventario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<movimientos_inventarioUpdateInput, movimientos_inventarioUncheckedUpdateInput>
  }

  /**
   * movimientos_inventario delete
   */
  export type movimientos_inventarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    /**
     * Filter which movimientos_inventario to delete.
     */
    where: movimientos_inventarioWhereUniqueInput
  }

  /**
   * movimientos_inventario deleteMany
   */
  export type movimientos_inventarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which movimientos_inventarios to delete
     */
    where?: movimientos_inventarioWhereInput
    /**
     * Limit how many movimientos_inventarios to delete.
     */
    limit?: number
  }

  /**
   * movimientos_inventario.productos
   */
  export type movimientos_inventario$productosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    where?: productosWhereInput
  }

  /**
   * movimientos_inventario without action
   */
  export type movimientos_inventarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
  }


  /**
   * Model productos
   */

  export type AggregateProductos = {
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  export type ProductosAvgAggregateOutputType = {
    id: number | null
    precio_compra: Decimal | null
    precio_venta: Decimal | null
    stock: number | null
    stock_minimo: number | null
  }

  export type ProductosSumAggregateOutputType = {
    id: number | null
    precio_compra: Decimal | null
    precio_venta: Decimal | null
    stock: number | null
    stock_minimo: number | null
  }

  export type ProductosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo: string | null
    precio_compra: Decimal | null
    precio_venta: Decimal | null
    stock: number | null
    stock_minimo: number | null
    fecha_caducidad: Date | null
    creado_en: Date | null
  }

  export type ProductosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo: string | null
    precio_compra: Decimal | null
    precio_venta: Decimal | null
    stock: number | null
    stock_minimo: number | null
    fecha_caducidad: Date | null
    creado_en: Date | null
  }

  export type ProductosCountAggregateOutputType = {
    id: number
    nombre: number
    tipo: number
    precio_compra: number
    precio_venta: number
    stock: number
    stock_minimo: number
    fecha_caducidad: number
    creado_en: number
    _all: number
  }


  export type ProductosAvgAggregateInputType = {
    id?: true
    precio_compra?: true
    precio_venta?: true
    stock?: true
    stock_minimo?: true
  }

  export type ProductosSumAggregateInputType = {
    id?: true
    precio_compra?: true
    precio_venta?: true
    stock?: true
    stock_minimo?: true
  }

  export type ProductosMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    precio_compra?: true
    precio_venta?: true
    stock?: true
    stock_minimo?: true
    fecha_caducidad?: true
    creado_en?: true
  }

  export type ProductosMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    precio_compra?: true
    precio_venta?: true
    stock?: true
    stock_minimo?: true
    fecha_caducidad?: true
    creado_en?: true
  }

  export type ProductosCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo?: true
    precio_compra?: true
    precio_venta?: true
    stock?: true
    stock_minimo?: true
    fecha_caducidad?: true
    creado_en?: true
    _all?: true
  }

  export type ProductosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productos to aggregate.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned productos
    **/
    _count?: true | ProductosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductosMaxAggregateInputType
  }

  export type GetProductosAggregateType<T extends ProductosAggregateArgs> = {
        [P in keyof T & keyof AggregateProductos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductos[P]>
      : GetScalarType<T[P], AggregateProductos[P]>
  }




  export type productosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productosWhereInput
    orderBy?: productosOrderByWithAggregationInput | productosOrderByWithAggregationInput[]
    by: ProductosScalarFieldEnum[] | ProductosScalarFieldEnum
    having?: productosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductosCountAggregateInputType | true
    _avg?: ProductosAvgAggregateInputType
    _sum?: ProductosSumAggregateInputType
    _min?: ProductosMinAggregateInputType
    _max?: ProductosMaxAggregateInputType
  }

  export type ProductosGroupByOutputType = {
    id: number
    nombre: string | null
    tipo: string | null
    precio_compra: Decimal | null
    precio_venta: Decimal | null
    stock: number | null
    stock_minimo: number | null
    fecha_caducidad: Date | null
    creado_en: Date | null
    _count: ProductosCountAggregateOutputType | null
    _avg: ProductosAvgAggregateOutputType | null
    _sum: ProductosSumAggregateOutputType | null
    _min: ProductosMinAggregateOutputType | null
    _max: ProductosMaxAggregateOutputType | null
  }

  type GetProductosGroupByPayload<T extends productosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductosGroupByOutputType[P]>
            : GetScalarType<T[P], ProductosGroupByOutputType[P]>
        }
      >
    >


  export type productosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    precio_compra?: boolean
    precio_venta?: boolean
    stock?: boolean
    stock_minimo?: boolean
    fecha_caducidad?: boolean
    creado_en?: boolean
    detalle_ventas?: boolean | productos$detalle_ventasArgs<ExtArgs>
    movimientos_inventario?: boolean | productos$movimientos_inventarioArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productos"]>

  export type productosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    precio_compra?: boolean
    precio_venta?: boolean
    stock?: boolean
    stock_minimo?: boolean
    fecha_caducidad?: boolean
    creado_en?: boolean
  }, ExtArgs["result"]["productos"]>

  export type productosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    precio_compra?: boolean
    precio_venta?: boolean
    stock?: boolean
    stock_minimo?: boolean
    fecha_caducidad?: boolean
    creado_en?: boolean
  }, ExtArgs["result"]["productos"]>

  export type productosSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo?: boolean
    precio_compra?: boolean
    precio_venta?: boolean
    stock?: boolean
    stock_minimo?: boolean
    fecha_caducidad?: boolean
    creado_en?: boolean
  }

  export type productosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "tipo" | "precio_compra" | "precio_venta" | "stock" | "stock_minimo" | "fecha_caducidad" | "creado_en", ExtArgs["result"]["productos"]>
  export type productosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_ventas?: boolean | productos$detalle_ventasArgs<ExtArgs>
    movimientos_inventario?: boolean | productos$movimientos_inventarioArgs<ExtArgs>
    _count?: boolean | ProductosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type productosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $productosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "productos"
    objects: {
      detalle_ventas: Prisma.$detalle_ventasPayload<ExtArgs>[]
      movimientos_inventario: Prisma.$movimientos_inventarioPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      tipo: string | null
      precio_compra: Prisma.Decimal | null
      precio_venta: Prisma.Decimal | null
      stock: number | null
      stock_minimo: number | null
      fecha_caducidad: Date | null
      creado_en: Date | null
    }, ExtArgs["result"]["productos"]>
    composites: {}
  }

  type productosGetPayload<S extends boolean | null | undefined | productosDefaultArgs> = $Result.GetResult<Prisma.$productosPayload, S>

  type productosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductosCountAggregateInputType | true
    }

  export interface productosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['productos'], meta: { name: 'productos' } }
    /**
     * Find zero or one Productos that matches the filter.
     * @param {productosFindUniqueArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productosFindUniqueArgs>(args: SelectSubset<T, productosFindUniqueArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Productos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productosFindUniqueOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productosFindUniqueOrThrowArgs>(args: SelectSubset<T, productosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindFirstArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productosFindFirstArgs>(args?: SelectSubset<T, productosFindFirstArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Productos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindFirstOrThrowArgs} args - Arguments to find a Productos
     * @example
     * // Get one Productos
     * const productos = await prisma.productos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productosFindFirstOrThrowArgs>(args?: SelectSubset<T, productosFindFirstOrThrowArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Productos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Productos
     * const productos = await prisma.productos.findMany()
     * 
     * // Get first 10 Productos
     * const productos = await prisma.productos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productosWithIdOnly = await prisma.productos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productosFindManyArgs>(args?: SelectSubset<T, productosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Productos.
     * @param {productosCreateArgs} args - Arguments to create a Productos.
     * @example
     * // Create one Productos
     * const Productos = await prisma.productos.create({
     *   data: {
     *     // ... data to create a Productos
     *   }
     * })
     * 
     */
    create<T extends productosCreateArgs>(args: SelectSubset<T, productosCreateArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Productos.
     * @param {productosCreateManyArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productosCreateManyArgs>(args?: SelectSubset<T, productosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Productos and returns the data saved in the database.
     * @param {productosCreateManyAndReturnArgs} args - Arguments to create many Productos.
     * @example
     * // Create many Productos
     * const productos = await prisma.productos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Productos and only return the `id`
     * const productosWithIdOnly = await prisma.productos.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productosCreateManyAndReturnArgs>(args?: SelectSubset<T, productosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Productos.
     * @param {productosDeleteArgs} args - Arguments to delete one Productos.
     * @example
     * // Delete one Productos
     * const Productos = await prisma.productos.delete({
     *   where: {
     *     // ... filter to delete one Productos
     *   }
     * })
     * 
     */
    delete<T extends productosDeleteArgs>(args: SelectSubset<T, productosDeleteArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Productos.
     * @param {productosUpdateArgs} args - Arguments to update one Productos.
     * @example
     * // Update one Productos
     * const productos = await prisma.productos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productosUpdateArgs>(args: SelectSubset<T, productosUpdateArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Productos.
     * @param {productosDeleteManyArgs} args - Arguments to filter Productos to delete.
     * @example
     * // Delete a few Productos
     * const { count } = await prisma.productos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productosDeleteManyArgs>(args?: SelectSubset<T, productosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productosUpdateManyArgs>(args: SelectSubset<T, productosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Productos and returns the data updated in the database.
     * @param {productosUpdateManyAndReturnArgs} args - Arguments to update many Productos.
     * @example
     * // Update many Productos
     * const productos = await prisma.productos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Productos and only return the `id`
     * const productosWithIdOnly = await prisma.productos.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productosUpdateManyAndReturnArgs>(args: SelectSubset<T, productosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Productos.
     * @param {productosUpsertArgs} args - Arguments to update or create a Productos.
     * @example
     * // Update or create a Productos
     * const productos = await prisma.productos.upsert({
     *   create: {
     *     // ... data to create a Productos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Productos we want to update
     *   }
     * })
     */
    upsert<T extends productosUpsertArgs>(args: SelectSubset<T, productosUpsertArgs<ExtArgs>>): Prisma__productosClient<$Result.GetResult<Prisma.$productosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosCountArgs} args - Arguments to filter Productos to count.
     * @example
     * // Count the number of Productos
     * const count = await prisma.productos.count({
     *   where: {
     *     // ... the filter for the Productos we want to count
     *   }
     * })
    **/
    count<T extends productosCountArgs>(
      args?: Subset<T, productosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductosAggregateArgs>(args: Subset<T, ProductosAggregateArgs>): Prisma.PrismaPromise<GetProductosAggregateType<T>>

    /**
     * Group by Productos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productosGroupByArgs['orderBy'] }
        : { orderBy?: productosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the productos model
   */
  readonly fields: productosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for productos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_ventas<T extends productos$detalle_ventasArgs<ExtArgs> = {}>(args?: Subset<T, productos$detalle_ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    movimientos_inventario<T extends productos$movimientos_inventarioArgs<ExtArgs> = {}>(args?: Subset<T, productos$movimientos_inventarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$movimientos_inventarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the productos model
   */
  interface productosFieldRefs {
    readonly id: FieldRef<"productos", 'Int'>
    readonly nombre: FieldRef<"productos", 'String'>
    readonly tipo: FieldRef<"productos", 'String'>
    readonly precio_compra: FieldRef<"productos", 'Decimal'>
    readonly precio_venta: FieldRef<"productos", 'Decimal'>
    readonly stock: FieldRef<"productos", 'Int'>
    readonly stock_minimo: FieldRef<"productos", 'Int'>
    readonly fecha_caducidad: FieldRef<"productos", 'DateTime'>
    readonly creado_en: FieldRef<"productos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * productos findUnique
   */
  export type productosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos findUniqueOrThrow
   */
  export type productosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos findFirst
   */
  export type productosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos findFirstOrThrow
   */
  export type productosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of productos.
     */
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos findMany
   */
  export type productosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter, which productos to fetch.
     */
    where?: productosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of productos to fetch.
     */
    orderBy?: productosOrderByWithRelationInput | productosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing productos.
     */
    cursor?: productosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` productos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` productos.
     */
    skip?: number
    distinct?: ProductosScalarFieldEnum | ProductosScalarFieldEnum[]
  }

  /**
   * productos create
   */
  export type productosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The data needed to create a productos.
     */
    data?: XOR<productosCreateInput, productosUncheckedCreateInput>
  }

  /**
   * productos createMany
   */
  export type productosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many productos.
     */
    data: productosCreateManyInput | productosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productos createManyAndReturn
   */
  export type productosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * The data used to create many productos.
     */
    data: productosCreateManyInput | productosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * productos update
   */
  export type productosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The data needed to update a productos.
     */
    data: XOR<productosUpdateInput, productosUncheckedUpdateInput>
    /**
     * Choose, which productos to update.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos updateMany
   */
  export type productosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update productos.
     */
    data: XOR<productosUpdateManyMutationInput, productosUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * productos updateManyAndReturn
   */
  export type productosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * The data used to update productos.
     */
    data: XOR<productosUpdateManyMutationInput, productosUncheckedUpdateManyInput>
    /**
     * Filter which productos to update
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to update.
     */
    limit?: number
  }

  /**
   * productos upsert
   */
  export type productosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * The filter to search for the productos to update in case it exists.
     */
    where: productosWhereUniqueInput
    /**
     * In case the productos found by the `where` argument doesn't exist, create a new productos with this data.
     */
    create: XOR<productosCreateInput, productosUncheckedCreateInput>
    /**
     * In case the productos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productosUpdateInput, productosUncheckedUpdateInput>
  }

  /**
   * productos delete
   */
  export type productosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
    /**
     * Filter which productos to delete.
     */
    where: productosWhereUniqueInput
  }

  /**
   * productos deleteMany
   */
  export type productosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which productos to delete
     */
    where?: productosWhereInput
    /**
     * Limit how many productos to delete.
     */
    limit?: number
  }

  /**
   * productos.detalle_ventas
   */
  export type productos$detalle_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    where?: detalle_ventasWhereInput
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    cursor?: detalle_ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_ventasScalarFieldEnum | Detalle_ventasScalarFieldEnum[]
  }

  /**
   * productos.movimientos_inventario
   */
  export type productos$movimientos_inventarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the movimientos_inventario
     */
    select?: movimientos_inventarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the movimientos_inventario
     */
    omit?: movimientos_inventarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: movimientos_inventarioInclude<ExtArgs> | null
    where?: movimientos_inventarioWhereInput
    orderBy?: movimientos_inventarioOrderByWithRelationInput | movimientos_inventarioOrderByWithRelationInput[]
    cursor?: movimientos_inventarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Movimientos_inventarioScalarFieldEnum | Movimientos_inventarioScalarFieldEnum[]
  }

  /**
   * productos without action
   */
  export type productosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the productos
     */
    select?: productosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the productos
     */
    omit?: productosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productosInclude<ExtArgs> | null
  }


  /**
   * Model proveedores
   */

  export type AggregateProveedores = {
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  export type ProveedoresAvgAggregateOutputType = {
    id: number | null
  }

  export type ProveedoresSumAggregateOutputType = {
    id: number | null
  }

  export type ProveedoresMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    contacto: string | null
    productos: string | null
  }

  export type ProveedoresMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    contacto: string | null
    productos: string | null
  }

  export type ProveedoresCountAggregateOutputType = {
    id: number
    nombre: number
    contacto: number
    productos: number
    _all: number
  }


  export type ProveedoresAvgAggregateInputType = {
    id?: true
  }

  export type ProveedoresSumAggregateInputType = {
    id?: true
  }

  export type ProveedoresMinAggregateInputType = {
    id?: true
    nombre?: true
    contacto?: true
    productos?: true
  }

  export type ProveedoresMaxAggregateInputType = {
    id?: true
    nombre?: true
    contacto?: true
    productos?: true
  }

  export type ProveedoresCountAggregateInputType = {
    id?: true
    nombre?: true
    contacto?: true
    productos?: true
    _all?: true
  }

  export type ProveedoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to aggregate.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proveedores
    **/
    _count?: true | ProveedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedoresMaxAggregateInputType
  }

  export type GetProveedoresAggregateType<T extends ProveedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedores[P]>
      : GetScalarType<T[P], AggregateProveedores[P]>
  }




  export type proveedoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedoresWhereInput
    orderBy?: proveedoresOrderByWithAggregationInput | proveedoresOrderByWithAggregationInput[]
    by: ProveedoresScalarFieldEnum[] | ProveedoresScalarFieldEnum
    having?: proveedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedoresCountAggregateInputType | true
    _avg?: ProveedoresAvgAggregateInputType
    _sum?: ProveedoresSumAggregateInputType
    _min?: ProveedoresMinAggregateInputType
    _max?: ProveedoresMaxAggregateInputType
  }

  export type ProveedoresGroupByOutputType = {
    id: number
    nombre: string | null
    contacto: string | null
    productos: string | null
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  type GetProveedoresGroupByPayload<T extends proveedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
        }
      >
    >


  export type proveedoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    contacto?: boolean
    productos?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    contacto?: boolean
    productos?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    contacto?: boolean
    productos?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectScalar = {
    id?: boolean
    nombre?: boolean
    contacto?: boolean
    productos?: boolean
  }

  export type proveedoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "contacto" | "productos", ExtArgs["result"]["proveedores"]>

  export type $proveedoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proveedores"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      contacto: string | null
      productos: string | null
    }, ExtArgs["result"]["proveedores"]>
    composites: {}
  }

  type proveedoresGetPayload<S extends boolean | null | undefined | proveedoresDefaultArgs> = $Result.GetResult<Prisma.$proveedoresPayload, S>

  type proveedoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proveedoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProveedoresCountAggregateInputType | true
    }

  export interface proveedoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proveedores'], meta: { name: 'proveedores' } }
    /**
     * Find zero or one Proveedores that matches the filter.
     * @param {proveedoresFindUniqueArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proveedoresFindUniqueArgs>(args: SelectSubset<T, proveedoresFindUniqueArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proveedores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proveedoresFindUniqueOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proveedoresFindUniqueOrThrowArgs>(args: SelectSubset<T, proveedoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proveedoresFindFirstArgs>(args?: SelectSubset<T, proveedoresFindFirstArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proveedoresFindFirstOrThrowArgs>(args?: SelectSubset<T, proveedoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedores
     * const proveedores = await prisma.proveedores.findMany()
     * 
     * // Get first 10 Proveedores
     * const proveedores = await prisma.proveedores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const proveedoresWithIdOnly = await prisma.proveedores.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends proveedoresFindManyArgs>(args?: SelectSubset<T, proveedoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proveedores.
     * @param {proveedoresCreateArgs} args - Arguments to create a Proveedores.
     * @example
     * // Create one Proveedores
     * const Proveedores = await prisma.proveedores.create({
     *   data: {
     *     // ... data to create a Proveedores
     *   }
     * })
     * 
     */
    create<T extends proveedoresCreateArgs>(args: SelectSubset<T, proveedoresCreateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proveedores.
     * @param {proveedoresCreateManyArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proveedoresCreateManyArgs>(args?: SelectSubset<T, proveedoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedores and returns the data saved in the database.
     * @param {proveedoresCreateManyAndReturnArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedores and only return the `id`
     * const proveedoresWithIdOnly = await prisma.proveedores.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proveedoresCreateManyAndReturnArgs>(args?: SelectSubset<T, proveedoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proveedores.
     * @param {proveedoresDeleteArgs} args - Arguments to delete one Proveedores.
     * @example
     * // Delete one Proveedores
     * const Proveedores = await prisma.proveedores.delete({
     *   where: {
     *     // ... filter to delete one Proveedores
     *   }
     * })
     * 
     */
    delete<T extends proveedoresDeleteArgs>(args: SelectSubset<T, proveedoresDeleteArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proveedores.
     * @param {proveedoresUpdateArgs} args - Arguments to update one Proveedores.
     * @example
     * // Update one Proveedores
     * const proveedores = await prisma.proveedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proveedoresUpdateArgs>(args: SelectSubset<T, proveedoresUpdateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proveedores.
     * @param {proveedoresDeleteManyArgs} args - Arguments to filter Proveedores to delete.
     * @example
     * // Delete a few Proveedores
     * const { count } = await prisma.proveedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proveedoresDeleteManyArgs>(args?: SelectSubset<T, proveedoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proveedoresUpdateManyArgs>(args: SelectSubset<T, proveedoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores and returns the data updated in the database.
     * @param {proveedoresUpdateManyAndReturnArgs} args - Arguments to update many Proveedores.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proveedores and only return the `id`
     * const proveedoresWithIdOnly = await prisma.proveedores.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proveedoresUpdateManyAndReturnArgs>(args: SelectSubset<T, proveedoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proveedores.
     * @param {proveedoresUpsertArgs} args - Arguments to update or create a Proveedores.
     * @example
     * // Update or create a Proveedores
     * const proveedores = await prisma.proveedores.upsert({
     *   create: {
     *     // ... data to create a Proveedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedores we want to update
     *   }
     * })
     */
    upsert<T extends proveedoresUpsertArgs>(args: SelectSubset<T, proveedoresUpsertArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresCountArgs} args - Arguments to filter Proveedores to count.
     * @example
     * // Count the number of Proveedores
     * const count = await prisma.proveedores.count({
     *   where: {
     *     // ... the filter for the Proveedores we want to count
     *   }
     * })
    **/
    count<T extends proveedoresCountArgs>(
      args?: Subset<T, proveedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedoresAggregateArgs>(args: Subset<T, ProveedoresAggregateArgs>): Prisma.PrismaPromise<GetProveedoresAggregateType<T>>

    /**
     * Group by Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proveedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proveedoresGroupByArgs['orderBy'] }
        : { orderBy?: proveedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proveedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proveedores model
   */
  readonly fields: proveedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proveedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proveedoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proveedores model
   */
  interface proveedoresFieldRefs {
    readonly id: FieldRef<"proveedores", 'Int'>
    readonly nombre: FieldRef<"proveedores", 'String'>
    readonly contacto: FieldRef<"proveedores", 'String'>
    readonly productos: FieldRef<"proveedores", 'String'>
  }
    

  // Custom InputTypes
  /**
   * proveedores findUnique
   */
  export type proveedoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findUniqueOrThrow
   */
  export type proveedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findFirst
   */
  export type proveedoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findFirstOrThrow
   */
  export type proveedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findMany
   */
  export type proveedoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores create
   */
  export type proveedoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data needed to create a proveedores.
     */
    data?: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
  }

  /**
   * proveedores createMany
   */
  export type proveedoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores createManyAndReturn
   */
  export type proveedoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores update
   */
  export type proveedoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data needed to update a proveedores.
     */
    data: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
    /**
     * Choose, which proveedores to update.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores updateMany
   */
  export type proveedoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores updateManyAndReturn
   */
  export type proveedoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores upsert
   */
  export type proveedoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The filter to search for the proveedores to update in case it exists.
     */
    where: proveedoresWhereUniqueInput
    /**
     * In case the proveedores found by the `where` argument doesn't exist, create a new proveedores with this data.
     */
    create: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
    /**
     * In case the proveedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
  }

  /**
   * proveedores delete
   */
  export type proveedoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Filter which proveedores to delete.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores deleteMany
   */
  export type proveedoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to delete
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to delete.
     */
    limit?: number
  }

  /**
   * proveedores without action
   */
  export type proveedoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
  }


  /**
   * Model reportes
   */

  export type AggregateReportes = {
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  export type ReportesAvgAggregateOutputType = {
    id: number | null
    generado_por: number | null
  }

  export type ReportesSumAggregateOutputType = {
    id: number | null
    generado_por: number | null
  }

  export type ReportesMinAggregateOutputType = {
    id: number | null
    tipo: string | null
    generado_por: number | null
    fecha: Date | null
  }

  export type ReportesMaxAggregateOutputType = {
    id: number | null
    tipo: string | null
    generado_por: number | null
    fecha: Date | null
  }

  export type ReportesCountAggregateOutputType = {
    id: number
    tipo: number
    generado_por: number
    fecha: number
    datos: number
    _all: number
  }


  export type ReportesAvgAggregateInputType = {
    id?: true
    generado_por?: true
  }

  export type ReportesSumAggregateInputType = {
    id?: true
    generado_por?: true
  }

  export type ReportesMinAggregateInputType = {
    id?: true
    tipo?: true
    generado_por?: true
    fecha?: true
  }

  export type ReportesMaxAggregateInputType = {
    id?: true
    tipo?: true
    generado_por?: true
    fecha?: true
  }

  export type ReportesCountAggregateInputType = {
    id?: true
    tipo?: true
    generado_por?: true
    fecha?: true
    datos?: true
    _all?: true
  }

  export type ReportesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes to aggregate.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reportes
    **/
    _count?: true | ReportesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReportesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReportesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportesMaxAggregateInputType
  }

  export type GetReportesAggregateType<T extends ReportesAggregateArgs> = {
        [P in keyof T & keyof AggregateReportes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReportes[P]>
      : GetScalarType<T[P], AggregateReportes[P]>
  }




  export type reportesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportesWhereInput
    orderBy?: reportesOrderByWithAggregationInput | reportesOrderByWithAggregationInput[]
    by: ReportesScalarFieldEnum[] | ReportesScalarFieldEnum
    having?: reportesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportesCountAggregateInputType | true
    _avg?: ReportesAvgAggregateInputType
    _sum?: ReportesSumAggregateInputType
    _min?: ReportesMinAggregateInputType
    _max?: ReportesMaxAggregateInputType
  }

  export type ReportesGroupByOutputType = {
    id: number
    tipo: string | null
    generado_por: number | null
    fecha: Date | null
    datos: JsonValue | null
    _count: ReportesCountAggregateOutputType | null
    _avg: ReportesAvgAggregateOutputType | null
    _sum: ReportesSumAggregateOutputType | null
    _min: ReportesMinAggregateOutputType | null
    _max: ReportesMaxAggregateOutputType | null
  }

  type GetReportesGroupByPayload<T extends reportesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportesGroupByOutputType[P]>
            : GetScalarType<T[P], ReportesGroupByOutputType[P]>
        }
      >
    >


  export type reportesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    generado_por?: boolean
    fecha?: boolean
    datos?: boolean
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type reportesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    generado_por?: boolean
    fecha?: boolean
    datos?: boolean
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type reportesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    tipo?: boolean
    generado_por?: boolean
    fecha?: boolean
    datos?: boolean
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["reportes"]>

  export type reportesSelectScalar = {
    id?: boolean
    tipo?: boolean
    generado_por?: boolean
    fecha?: boolean
    datos?: boolean
  }

  export type reportesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "tipo" | "generado_por" | "fecha" | "datos", ExtArgs["result"]["reportes"]>
  export type reportesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }
  export type reportesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }
  export type reportesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | reportes$usuariosArgs<ExtArgs>
  }

  export type $reportesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reportes"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      tipo: string | null
      generado_por: number | null
      fecha: Date | null
      datos: Prisma.JsonValue | null
    }, ExtArgs["result"]["reportes"]>
    composites: {}
  }

  type reportesGetPayload<S extends boolean | null | undefined | reportesDefaultArgs> = $Result.GetResult<Prisma.$reportesPayload, S>

  type reportesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportesCountAggregateInputType | true
    }

  export interface reportesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reportes'], meta: { name: 'reportes' } }
    /**
     * Find zero or one Reportes that matches the filter.
     * @param {reportesFindUniqueArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportesFindUniqueArgs>(args: SelectSubset<T, reportesFindUniqueArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reportes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportesFindUniqueOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportesFindUniqueOrThrowArgs>(args: SelectSubset<T, reportesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindFirstArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportesFindFirstArgs>(args?: SelectSubset<T, reportesFindFirstArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reportes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindFirstOrThrowArgs} args - Arguments to find a Reportes
     * @example
     * // Get one Reportes
     * const reportes = await prisma.reportes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportesFindFirstOrThrowArgs>(args?: SelectSubset<T, reportesFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reportes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reportes
     * const reportes = await prisma.reportes.findMany()
     * 
     * // Get first 10 Reportes
     * const reportes = await prisma.reportes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportesWithIdOnly = await prisma.reportes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportesFindManyArgs>(args?: SelectSubset<T, reportesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reportes.
     * @param {reportesCreateArgs} args - Arguments to create a Reportes.
     * @example
     * // Create one Reportes
     * const Reportes = await prisma.reportes.create({
     *   data: {
     *     // ... data to create a Reportes
     *   }
     * })
     * 
     */
    create<T extends reportesCreateArgs>(args: SelectSubset<T, reportesCreateArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reportes.
     * @param {reportesCreateManyArgs} args - Arguments to create many Reportes.
     * @example
     * // Create many Reportes
     * const reportes = await prisma.reportes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportesCreateManyArgs>(args?: SelectSubset<T, reportesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reportes and returns the data saved in the database.
     * @param {reportesCreateManyAndReturnArgs} args - Arguments to create many Reportes.
     * @example
     * // Create many Reportes
     * const reportes = await prisma.reportes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reportes and only return the `id`
     * const reportesWithIdOnly = await prisma.reportes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reportesCreateManyAndReturnArgs>(args?: SelectSubset<T, reportesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reportes.
     * @param {reportesDeleteArgs} args - Arguments to delete one Reportes.
     * @example
     * // Delete one Reportes
     * const Reportes = await prisma.reportes.delete({
     *   where: {
     *     // ... filter to delete one Reportes
     *   }
     * })
     * 
     */
    delete<T extends reportesDeleteArgs>(args: SelectSubset<T, reportesDeleteArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reportes.
     * @param {reportesUpdateArgs} args - Arguments to update one Reportes.
     * @example
     * // Update one Reportes
     * const reportes = await prisma.reportes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportesUpdateArgs>(args: SelectSubset<T, reportesUpdateArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reportes.
     * @param {reportesDeleteManyArgs} args - Arguments to filter Reportes to delete.
     * @example
     * // Delete a few Reportes
     * const { count } = await prisma.reportes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportesDeleteManyArgs>(args?: SelectSubset<T, reportesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reportes
     * const reportes = await prisma.reportes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportesUpdateManyArgs>(args: SelectSubset<T, reportesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reportes and returns the data updated in the database.
     * @param {reportesUpdateManyAndReturnArgs} args - Arguments to update many Reportes.
     * @example
     * // Update many Reportes
     * const reportes = await prisma.reportes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reportes and only return the `id`
     * const reportesWithIdOnly = await prisma.reportes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reportesUpdateManyAndReturnArgs>(args: SelectSubset<T, reportesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reportes.
     * @param {reportesUpsertArgs} args - Arguments to update or create a Reportes.
     * @example
     * // Update or create a Reportes
     * const reportes = await prisma.reportes.upsert({
     *   create: {
     *     // ... data to create a Reportes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reportes we want to update
     *   }
     * })
     */
    upsert<T extends reportesUpsertArgs>(args: SelectSubset<T, reportesUpsertArgs<ExtArgs>>): Prisma__reportesClient<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesCountArgs} args - Arguments to filter Reportes to count.
     * @example
     * // Count the number of Reportes
     * const count = await prisma.reportes.count({
     *   where: {
     *     // ... the filter for the Reportes we want to count
     *   }
     * })
    **/
    count<T extends reportesCountArgs>(
      args?: Subset<T, reportesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportesAggregateArgs>(args: Subset<T, ReportesAggregateArgs>): Prisma.PrismaPromise<GetReportesAggregateType<T>>

    /**
     * Group by Reportes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportesGroupByArgs['orderBy'] }
        : { orderBy?: reportesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reportes model
   */
  readonly fields: reportesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reportes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends reportes$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, reportes$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reportes model
   */
  interface reportesFieldRefs {
    readonly id: FieldRef<"reportes", 'Int'>
    readonly tipo: FieldRef<"reportes", 'String'>
    readonly generado_por: FieldRef<"reportes", 'Int'>
    readonly fecha: FieldRef<"reportes", 'DateTime'>
    readonly datos: FieldRef<"reportes", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * reportes findUnique
   */
  export type reportesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes findUniqueOrThrow
   */
  export type reportesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes findFirst
   */
  export type reportesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes findFirstOrThrow
   */
  export type reportesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reportes.
     */
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes findMany
   */
  export type reportesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter, which reportes to fetch.
     */
    where?: reportesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reportes to fetch.
     */
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reportes.
     */
    cursor?: reportesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reportes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reportes.
     */
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * reportes create
   */
  export type reportesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The data needed to create a reportes.
     */
    data?: XOR<reportesCreateInput, reportesUncheckedCreateInput>
  }

  /**
   * reportes createMany
   */
  export type reportesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reportes.
     */
    data: reportesCreateManyInput | reportesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reportes createManyAndReturn
   */
  export type reportesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * The data used to create many reportes.
     */
    data: reportesCreateManyInput | reportesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reportes update
   */
  export type reportesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The data needed to update a reportes.
     */
    data: XOR<reportesUpdateInput, reportesUncheckedUpdateInput>
    /**
     * Choose, which reportes to update.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes updateMany
   */
  export type reportesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reportes.
     */
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyInput>
    /**
     * Filter which reportes to update
     */
    where?: reportesWhereInput
    /**
     * Limit how many reportes to update.
     */
    limit?: number
  }

  /**
   * reportes updateManyAndReturn
   */
  export type reportesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * The data used to update reportes.
     */
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyInput>
    /**
     * Filter which reportes to update
     */
    where?: reportesWhereInput
    /**
     * Limit how many reportes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reportes upsert
   */
  export type reportesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * The filter to search for the reportes to update in case it exists.
     */
    where: reportesWhereUniqueInput
    /**
     * In case the reportes found by the `where` argument doesn't exist, create a new reportes with this data.
     */
    create: XOR<reportesCreateInput, reportesUncheckedCreateInput>
    /**
     * In case the reportes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportesUpdateInput, reportesUncheckedUpdateInput>
  }

  /**
   * reportes delete
   */
  export type reportesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    /**
     * Filter which reportes to delete.
     */
    where: reportesWhereUniqueInput
  }

  /**
   * reportes deleteMany
   */
  export type reportesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reportes to delete
     */
    where?: reportesWhereInput
    /**
     * Limit how many reportes to delete.
     */
    limit?: number
  }

  /**
   * reportes.usuarios
   */
  export type reportes$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * reportes without action
   */
  export type reportesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    id: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    id: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    creado_en: Date | null
  }

  export type UsuariosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    email: string | null
    password: string | null
    rol: string | null
    creado_en: Date | null
  }

  export type UsuariosCountAggregateOutputType = {
    id: number
    nombre: number
    email: number
    password: number
    rol: number
    creado_en: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    id?: true
  }

  export type UsuariosSumAggregateInputType = {
    id?: true
  }

  export type UsuariosMinAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    creado_en?: true
  }

  export type UsuariosMaxAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    creado_en?: true
  }

  export type UsuariosCountAggregateInputType = {
    id?: true
    nombre?: true
    email?: true
    password?: true
    rol?: true
    creado_en?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    id: number
    nombre: string | null
    email: string
    password: string
    rol: string | null
    creado_en: Date | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    creado_en?: boolean
    reportes?: boolean | usuarios$reportesArgs<ExtArgs>
    ventas?: boolean | usuarios$ventasArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    creado_en?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    creado_en?: boolean
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    id?: boolean
    nombre?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    creado_en?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nombre" | "email" | "password" | "rol" | "creado_en", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reportes?: boolean | usuarios$reportesArgs<ExtArgs>
    ventas?: boolean | usuarios$ventasArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usuariosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      reportes: Prisma.$reportesPayload<ExtArgs>[]
      ventas: Prisma.$ventasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      email: string
      password: string
      rol: string | null
      creado_en: Date | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuariosUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `id`
     * const usuariosWithIdOnly = await prisma.usuarios.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuariosUpdateManyAndReturnArgs>(args: SelectSubset<T, usuariosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reportes<T extends usuarios$reportesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$reportesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ventas<T extends usuarios$ventasArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly id: FieldRef<"usuarios", 'Int'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly email: FieldRef<"usuarios", 'String'>
    readonly password: FieldRef<"usuarios", 'String'>
    readonly rol: FieldRef<"usuarios", 'String'>
    readonly creado_en: FieldRef<"usuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios createManyAndReturn
   */
  export type usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios updateManyAndReturn
   */
  export type usuariosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.reportes
   */
  export type usuarios$reportesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reportes
     */
    select?: reportesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reportes
     */
    omit?: reportesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportesInclude<ExtArgs> | null
    where?: reportesWhereInput
    orderBy?: reportesOrderByWithRelationInput | reportesOrderByWithRelationInput[]
    cursor?: reportesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportesScalarFieldEnum | ReportesScalarFieldEnum[]
  }

  /**
   * usuarios.ventas
   */
  export type usuarios$ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    cursor?: ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Model ventas
   */

  export type AggregateVentas = {
    _count: VentasCountAggregateOutputType | null
    _avg: VentasAvgAggregateOutputType | null
    _sum: VentasSumAggregateOutputType | null
    _min: VentasMinAggregateOutputType | null
    _max: VentasMaxAggregateOutputType | null
  }

  export type VentasAvgAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    total: Decimal | null
  }

  export type VentasSumAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    total: Decimal | null
  }

  export type VentasMinAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    fecha: Date | null
    total: Decimal | null
    metodo_pago: string | null
  }

  export type VentasMaxAggregateOutputType = {
    id: number | null
    usuario_id: number | null
    fecha: Date | null
    total: Decimal | null
    metodo_pago: string | null
  }

  export type VentasCountAggregateOutputType = {
    id: number
    usuario_id: number
    fecha: number
    total: number
    metodo_pago: number
    _all: number
  }


  export type VentasAvgAggregateInputType = {
    id?: true
    usuario_id?: true
    total?: true
  }

  export type VentasSumAggregateInputType = {
    id?: true
    usuario_id?: true
    total?: true
  }

  export type VentasMinAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type VentasMaxAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    total?: true
    metodo_pago?: true
  }

  export type VentasCountAggregateInputType = {
    id?: true
    usuario_id?: true
    fecha?: true
    total?: true
    metodo_pago?: true
    _all?: true
  }

  export type VentasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ventas to aggregate.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ventas
    **/
    _count?: true | VentasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VentasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VentasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VentasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VentasMaxAggregateInputType
  }

  export type GetVentasAggregateType<T extends VentasAggregateArgs> = {
        [P in keyof T & keyof AggregateVentas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVentas[P]>
      : GetScalarType<T[P], AggregateVentas[P]>
  }




  export type ventasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ventasWhereInput
    orderBy?: ventasOrderByWithAggregationInput | ventasOrderByWithAggregationInput[]
    by: VentasScalarFieldEnum[] | VentasScalarFieldEnum
    having?: ventasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VentasCountAggregateInputType | true
    _avg?: VentasAvgAggregateInputType
    _sum?: VentasSumAggregateInputType
    _min?: VentasMinAggregateInputType
    _max?: VentasMaxAggregateInputType
  }

  export type VentasGroupByOutputType = {
    id: number
    usuario_id: number | null
    fecha: Date | null
    total: Decimal | null
    metodo_pago: string | null
    _count: VentasCountAggregateOutputType | null
    _avg: VentasAvgAggregateOutputType | null
    _sum: VentasSumAggregateOutputType | null
    _min: VentasMinAggregateOutputType | null
    _max: VentasMaxAggregateOutputType | null
  }

  type GetVentasGroupByPayload<T extends ventasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VentasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VentasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VentasGroupByOutputType[P]>
            : GetScalarType<T[P], VentasGroupByOutputType[P]>
        }
      >
    >


  export type ventasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    detalle_ventas?: boolean | ventas$detalle_ventasArgs<ExtArgs>
    facturas?: boolean | ventas$facturasArgs<ExtArgs>
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
    _count?: boolean | VentasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ventas"]>

  export type ventasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["ventas"]>

  export type ventasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
  }, ExtArgs["result"]["ventas"]>

  export type ventasSelectScalar = {
    id?: boolean
    usuario_id?: boolean
    fecha?: boolean
    total?: boolean
    metodo_pago?: boolean
  }

  export type ventasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "usuario_id" | "fecha" | "total" | "metodo_pago", ExtArgs["result"]["ventas"]>
  export type ventasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_ventas?: boolean | ventas$detalle_ventasArgs<ExtArgs>
    facturas?: boolean | ventas$facturasArgs<ExtArgs>
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
    _count?: boolean | VentasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ventasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
  }
  export type ventasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | ventas$usuariosArgs<ExtArgs>
  }

  export type $ventasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ventas"
    objects: {
      detalle_ventas: Prisma.$detalle_ventasPayload<ExtArgs>[]
      facturas: Prisma.$facturasPayload<ExtArgs>[]
      usuarios: Prisma.$usuariosPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      usuario_id: number | null
      fecha: Date | null
      total: Prisma.Decimal | null
      metodo_pago: string | null
    }, ExtArgs["result"]["ventas"]>
    composites: {}
  }

  type ventasGetPayload<S extends boolean | null | undefined | ventasDefaultArgs> = $Result.GetResult<Prisma.$ventasPayload, S>

  type ventasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ventasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VentasCountAggregateInputType | true
    }

  export interface ventasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ventas'], meta: { name: 'ventas' } }
    /**
     * Find zero or one Ventas that matches the filter.
     * @param {ventasFindUniqueArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ventasFindUniqueArgs>(args: SelectSubset<T, ventasFindUniqueArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ventas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ventasFindUniqueOrThrowArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ventasFindUniqueOrThrowArgs>(args: SelectSubset<T, ventasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindFirstArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ventasFindFirstArgs>(args?: SelectSubset<T, ventasFindFirstArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ventas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindFirstOrThrowArgs} args - Arguments to find a Ventas
     * @example
     * // Get one Ventas
     * const ventas = await prisma.ventas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ventasFindFirstOrThrowArgs>(args?: SelectSubset<T, ventasFindFirstOrThrowArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ventas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ventas
     * const ventas = await prisma.ventas.findMany()
     * 
     * // Get first 10 Ventas
     * const ventas = await prisma.ventas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ventasWithIdOnly = await prisma.ventas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ventasFindManyArgs>(args?: SelectSubset<T, ventasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ventas.
     * @param {ventasCreateArgs} args - Arguments to create a Ventas.
     * @example
     * // Create one Ventas
     * const Ventas = await prisma.ventas.create({
     *   data: {
     *     // ... data to create a Ventas
     *   }
     * })
     * 
     */
    create<T extends ventasCreateArgs>(args: SelectSubset<T, ventasCreateArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ventas.
     * @param {ventasCreateManyArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const ventas = await prisma.ventas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ventasCreateManyArgs>(args?: SelectSubset<T, ventasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ventas and returns the data saved in the database.
     * @param {ventasCreateManyAndReturnArgs} args - Arguments to create many Ventas.
     * @example
     * // Create many Ventas
     * const ventas = await prisma.ventas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ventas and only return the `id`
     * const ventasWithIdOnly = await prisma.ventas.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ventasCreateManyAndReturnArgs>(args?: SelectSubset<T, ventasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ventas.
     * @param {ventasDeleteArgs} args - Arguments to delete one Ventas.
     * @example
     * // Delete one Ventas
     * const Ventas = await prisma.ventas.delete({
     *   where: {
     *     // ... filter to delete one Ventas
     *   }
     * })
     * 
     */
    delete<T extends ventasDeleteArgs>(args: SelectSubset<T, ventasDeleteArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ventas.
     * @param {ventasUpdateArgs} args - Arguments to update one Ventas.
     * @example
     * // Update one Ventas
     * const ventas = await prisma.ventas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ventasUpdateArgs>(args: SelectSubset<T, ventasUpdateArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ventas.
     * @param {ventasDeleteManyArgs} args - Arguments to filter Ventas to delete.
     * @example
     * // Delete a few Ventas
     * const { count } = await prisma.ventas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ventasDeleteManyArgs>(args?: SelectSubset<T, ventasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ventas
     * const ventas = await prisma.ventas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ventasUpdateManyArgs>(args: SelectSubset<T, ventasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ventas and returns the data updated in the database.
     * @param {ventasUpdateManyAndReturnArgs} args - Arguments to update many Ventas.
     * @example
     * // Update many Ventas
     * const ventas = await prisma.ventas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ventas and only return the `id`
     * const ventasWithIdOnly = await prisma.ventas.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ventasUpdateManyAndReturnArgs>(args: SelectSubset<T, ventasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ventas.
     * @param {ventasUpsertArgs} args - Arguments to update or create a Ventas.
     * @example
     * // Update or create a Ventas
     * const ventas = await prisma.ventas.upsert({
     *   create: {
     *     // ... data to create a Ventas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ventas we want to update
     *   }
     * })
     */
    upsert<T extends ventasUpsertArgs>(args: SelectSubset<T, ventasUpsertArgs<ExtArgs>>): Prisma__ventasClient<$Result.GetResult<Prisma.$ventasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasCountArgs} args - Arguments to filter Ventas to count.
     * @example
     * // Count the number of Ventas
     * const count = await prisma.ventas.count({
     *   where: {
     *     // ... the filter for the Ventas we want to count
     *   }
     * })
    **/
    count<T extends ventasCountArgs>(
      args?: Subset<T, ventasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VentasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VentasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VentasAggregateArgs>(args: Subset<T, VentasAggregateArgs>): Prisma.PrismaPromise<GetVentasAggregateType<T>>

    /**
     * Group by Ventas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ventasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ventasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ventasGroupByArgs['orderBy'] }
        : { orderBy?: ventasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ventasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVentasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ventas model
   */
  readonly fields: ventasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ventas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ventasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    detalle_ventas<T extends ventas$detalle_ventasArgs<ExtArgs> = {}>(args?: Subset<T, ventas$detalle_ventasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_ventasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    facturas<T extends ventas$facturasArgs<ExtArgs> = {}>(args?: Subset<T, ventas$facturasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$facturasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    usuarios<T extends ventas$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, ventas$usuariosArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ventas model
   */
  interface ventasFieldRefs {
    readonly id: FieldRef<"ventas", 'Int'>
    readonly usuario_id: FieldRef<"ventas", 'Int'>
    readonly fecha: FieldRef<"ventas", 'DateTime'>
    readonly total: FieldRef<"ventas", 'Decimal'>
    readonly metodo_pago: FieldRef<"ventas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ventas findUnique
   */
  export type ventasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas findUniqueOrThrow
   */
  export type ventasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas findFirst
   */
  export type ventasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas findFirstOrThrow
   */
  export type ventasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ventas.
     */
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas findMany
   */
  export type ventasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter, which ventas to fetch.
     */
    where?: ventasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ventas to fetch.
     */
    orderBy?: ventasOrderByWithRelationInput | ventasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ventas.
     */
    cursor?: ventasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ventas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ventas.
     */
    skip?: number
    distinct?: VentasScalarFieldEnum | VentasScalarFieldEnum[]
  }

  /**
   * ventas create
   */
  export type ventasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The data needed to create a ventas.
     */
    data?: XOR<ventasCreateInput, ventasUncheckedCreateInput>
  }

  /**
   * ventas createMany
   */
  export type ventasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ventas.
     */
    data: ventasCreateManyInput | ventasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ventas createManyAndReturn
   */
  export type ventasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * The data used to create many ventas.
     */
    data: ventasCreateManyInput | ventasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ventas update
   */
  export type ventasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The data needed to update a ventas.
     */
    data: XOR<ventasUpdateInput, ventasUncheckedUpdateInput>
    /**
     * Choose, which ventas to update.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas updateMany
   */
  export type ventasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ventas.
     */
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyInput>
    /**
     * Filter which ventas to update
     */
    where?: ventasWhereInput
    /**
     * Limit how many ventas to update.
     */
    limit?: number
  }

  /**
   * ventas updateManyAndReturn
   */
  export type ventasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * The data used to update ventas.
     */
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyInput>
    /**
     * Filter which ventas to update
     */
    where?: ventasWhereInput
    /**
     * Limit how many ventas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ventas upsert
   */
  export type ventasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * The filter to search for the ventas to update in case it exists.
     */
    where: ventasWhereUniqueInput
    /**
     * In case the ventas found by the `where` argument doesn't exist, create a new ventas with this data.
     */
    create: XOR<ventasCreateInput, ventasUncheckedCreateInput>
    /**
     * In case the ventas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ventasUpdateInput, ventasUncheckedUpdateInput>
  }

  /**
   * ventas delete
   */
  export type ventasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
    /**
     * Filter which ventas to delete.
     */
    where: ventasWhereUniqueInput
  }

  /**
   * ventas deleteMany
   */
  export type ventasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ventas to delete
     */
    where?: ventasWhereInput
    /**
     * Limit how many ventas to delete.
     */
    limit?: number
  }

  /**
   * ventas.detalle_ventas
   */
  export type ventas$detalle_ventasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_ventas
     */
    select?: detalle_ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_ventas
     */
    omit?: detalle_ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_ventasInclude<ExtArgs> | null
    where?: detalle_ventasWhereInput
    orderBy?: detalle_ventasOrderByWithRelationInput | detalle_ventasOrderByWithRelationInput[]
    cursor?: detalle_ventasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_ventasScalarFieldEnum | Detalle_ventasScalarFieldEnum[]
  }

  /**
   * ventas.facturas
   */
  export type ventas$facturasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the facturas
     */
    select?: facturasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the facturas
     */
    omit?: facturasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: facturasInclude<ExtArgs> | null
    where?: facturasWhereInput
    orderBy?: facturasOrderByWithRelationInput | facturasOrderByWithRelationInput[]
    cursor?: facturasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FacturasScalarFieldEnum | FacturasScalarFieldEnum[]
  }

  /**
   * ventas.usuarios
   */
  export type ventas$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
  }

  /**
   * ventas without action
   */
  export type ventasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ventas
     */
    select?: ventasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ventas
     */
    omit?: ventasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ventasInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ConfiguracionScalarFieldEnum: {
    id: 'id',
    clave: 'clave',
    valor: 'valor'
  };

  export type ConfiguracionScalarFieldEnum = (typeof ConfiguracionScalarFieldEnum)[keyof typeof ConfiguracionScalarFieldEnum]


  export const Detalle_ventasScalarFieldEnum: {
    id: 'id',
    venta_id: 'venta_id',
    producto_id: 'producto_id',
    cantidad: 'cantidad',
    precio_unitario: 'precio_unitario'
  };

  export type Detalle_ventasScalarFieldEnum = (typeof Detalle_ventasScalarFieldEnum)[keyof typeof Detalle_ventasScalarFieldEnum]


  export const FacturasScalarFieldEnum: {
    id: 'id',
    venta_id: 'venta_id',
    folio: 'folio',
    total: 'total',
    fecha: 'fecha'
  };

  export type FacturasScalarFieldEnum = (typeof FacturasScalarFieldEnum)[keyof typeof FacturasScalarFieldEnum]


  export const Movimientos_inventarioScalarFieldEnum: {
    id: 'id',
    producto_id: 'producto_id',
    tipo: 'tipo',
    cantidad: 'cantidad',
    observacion: 'observacion',
    fecha: 'fecha'
  };

  export type Movimientos_inventarioScalarFieldEnum = (typeof Movimientos_inventarioScalarFieldEnum)[keyof typeof Movimientos_inventarioScalarFieldEnum]


  export const ProductosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo: 'tipo',
    precio_compra: 'precio_compra',
    precio_venta: 'precio_venta',
    stock: 'stock',
    stock_minimo: 'stock_minimo',
    fecha_caducidad: 'fecha_caducidad',
    creado_en: 'creado_en'
  };

  export type ProductosScalarFieldEnum = (typeof ProductosScalarFieldEnum)[keyof typeof ProductosScalarFieldEnum]


  export const ProveedoresScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    contacto: 'contacto',
    productos: 'productos'
  };

  export type ProveedoresScalarFieldEnum = (typeof ProveedoresScalarFieldEnum)[keyof typeof ProveedoresScalarFieldEnum]


  export const ReportesScalarFieldEnum: {
    id: 'id',
    tipo: 'tipo',
    generado_por: 'generado_por',
    fecha: 'fecha',
    datos: 'datos'
  };

  export type ReportesScalarFieldEnum = (typeof ReportesScalarFieldEnum)[keyof typeof ReportesScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    email: 'email',
    password: 'password',
    rol: 'rol',
    creado_en: 'creado_en'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const VentasScalarFieldEnum: {
    id: 'id',
    usuario_id: 'usuario_id',
    fecha: 'fecha',
    total: 'total',
    metodo_pago: 'metodo_pago'
  };

  export type VentasScalarFieldEnum = (typeof VentasScalarFieldEnum)[keyof typeof VentasScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type configuracionWhereInput = {
    AND?: configuracionWhereInput | configuracionWhereInput[]
    OR?: configuracionWhereInput[]
    NOT?: configuracionWhereInput | configuracionWhereInput[]
    id?: IntFilter<"configuracion"> | number
    clave?: StringNullableFilter<"configuracion"> | string | null
    valor?: StringNullableFilter<"configuracion"> | string | null
  }

  export type configuracionOrderByWithRelationInput = {
    id?: SortOrder
    clave?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
  }

  export type configuracionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    clave?: string
    AND?: configuracionWhereInput | configuracionWhereInput[]
    OR?: configuracionWhereInput[]
    NOT?: configuracionWhereInput | configuracionWhereInput[]
    valor?: StringNullableFilter<"configuracion"> | string | null
  }, "id" | "clave">

  export type configuracionOrderByWithAggregationInput = {
    id?: SortOrder
    clave?: SortOrderInput | SortOrder
    valor?: SortOrderInput | SortOrder
    _count?: configuracionCountOrderByAggregateInput
    _avg?: configuracionAvgOrderByAggregateInput
    _max?: configuracionMaxOrderByAggregateInput
    _min?: configuracionMinOrderByAggregateInput
    _sum?: configuracionSumOrderByAggregateInput
  }

  export type configuracionScalarWhereWithAggregatesInput = {
    AND?: configuracionScalarWhereWithAggregatesInput | configuracionScalarWhereWithAggregatesInput[]
    OR?: configuracionScalarWhereWithAggregatesInput[]
    NOT?: configuracionScalarWhereWithAggregatesInput | configuracionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"configuracion"> | number
    clave?: StringNullableWithAggregatesFilter<"configuracion"> | string | null
    valor?: StringNullableWithAggregatesFilter<"configuracion"> | string | null
  }

  export type detalle_ventasWhereInput = {
    AND?: detalle_ventasWhereInput | detalle_ventasWhereInput[]
    OR?: detalle_ventasWhereInput[]
    NOT?: detalle_ventasWhereInput | detalle_ventasWhereInput[]
    id?: IntFilter<"detalle_ventas"> | number
    venta_id?: IntNullableFilter<"detalle_ventas"> | number | null
    producto_id?: IntNullableFilter<"detalle_ventas"> | number | null
    cantidad?: IntNullableFilter<"detalle_ventas"> | number | null
    precio_unitario?: DecimalNullableFilter<"detalle_ventas"> | Decimal | DecimalJsLike | number | string | null
    productos?: XOR<ProductosNullableScalarRelationFilter, productosWhereInput> | null
    ventas?: XOR<VentasNullableScalarRelationFilter, ventasWhereInput> | null
  }

  export type detalle_ventasOrderByWithRelationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    precio_unitario?: SortOrderInput | SortOrder
    productos?: productosOrderByWithRelationInput
    ventas?: ventasOrderByWithRelationInput
  }

  export type detalle_ventasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: detalle_ventasWhereInput | detalle_ventasWhereInput[]
    OR?: detalle_ventasWhereInput[]
    NOT?: detalle_ventasWhereInput | detalle_ventasWhereInput[]
    venta_id?: IntNullableFilter<"detalle_ventas"> | number | null
    producto_id?: IntNullableFilter<"detalle_ventas"> | number | null
    cantidad?: IntNullableFilter<"detalle_ventas"> | number | null
    precio_unitario?: DecimalNullableFilter<"detalle_ventas"> | Decimal | DecimalJsLike | number | string | null
    productos?: XOR<ProductosNullableScalarRelationFilter, productosWhereInput> | null
    ventas?: XOR<VentasNullableScalarRelationFilter, ventasWhereInput> | null
  }, "id">

  export type detalle_ventasOrderByWithAggregationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    producto_id?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    precio_unitario?: SortOrderInput | SortOrder
    _count?: detalle_ventasCountOrderByAggregateInput
    _avg?: detalle_ventasAvgOrderByAggregateInput
    _max?: detalle_ventasMaxOrderByAggregateInput
    _min?: detalle_ventasMinOrderByAggregateInput
    _sum?: detalle_ventasSumOrderByAggregateInput
  }

  export type detalle_ventasScalarWhereWithAggregatesInput = {
    AND?: detalle_ventasScalarWhereWithAggregatesInput | detalle_ventasScalarWhereWithAggregatesInput[]
    OR?: detalle_ventasScalarWhereWithAggregatesInput[]
    NOT?: detalle_ventasScalarWhereWithAggregatesInput | detalle_ventasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"detalle_ventas"> | number
    venta_id?: IntNullableWithAggregatesFilter<"detalle_ventas"> | number | null
    producto_id?: IntNullableWithAggregatesFilter<"detalle_ventas"> | number | null
    cantidad?: IntNullableWithAggregatesFilter<"detalle_ventas"> | number | null
    precio_unitario?: DecimalNullableWithAggregatesFilter<"detalle_ventas"> | Decimal | DecimalJsLike | number | string | null
  }

  export type facturasWhereInput = {
    AND?: facturasWhereInput | facturasWhereInput[]
    OR?: facturasWhereInput[]
    NOT?: facturasWhereInput | facturasWhereInput[]
    id?: IntFilter<"facturas"> | number
    venta_id?: IntNullableFilter<"facturas"> | number | null
    folio?: StringNullableFilter<"facturas"> | string | null
    total?: DecimalNullableFilter<"facturas"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"facturas"> | Date | string | null
    ventas?: XOR<VentasNullableScalarRelationFilter, ventasWhereInput> | null
  }

  export type facturasOrderByWithRelationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    folio?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    ventas?: ventasOrderByWithRelationInput
  }

  export type facturasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: facturasWhereInput | facturasWhereInput[]
    OR?: facturasWhereInput[]
    NOT?: facturasWhereInput | facturasWhereInput[]
    venta_id?: IntNullableFilter<"facturas"> | number | null
    folio?: StringNullableFilter<"facturas"> | string | null
    total?: DecimalNullableFilter<"facturas"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"facturas"> | Date | string | null
    ventas?: XOR<VentasNullableScalarRelationFilter, ventasWhereInput> | null
  }, "id">

  export type facturasOrderByWithAggregationInput = {
    id?: SortOrder
    venta_id?: SortOrderInput | SortOrder
    folio?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    _count?: facturasCountOrderByAggregateInput
    _avg?: facturasAvgOrderByAggregateInput
    _max?: facturasMaxOrderByAggregateInput
    _min?: facturasMinOrderByAggregateInput
    _sum?: facturasSumOrderByAggregateInput
  }

  export type facturasScalarWhereWithAggregatesInput = {
    AND?: facturasScalarWhereWithAggregatesInput | facturasScalarWhereWithAggregatesInput[]
    OR?: facturasScalarWhereWithAggregatesInput[]
    NOT?: facturasScalarWhereWithAggregatesInput | facturasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"facturas"> | number
    venta_id?: IntNullableWithAggregatesFilter<"facturas"> | number | null
    folio?: StringNullableWithAggregatesFilter<"facturas"> | string | null
    total?: DecimalNullableWithAggregatesFilter<"facturas"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"facturas"> | Date | string | null
  }

  export type movimientos_inventarioWhereInput = {
    AND?: movimientos_inventarioWhereInput | movimientos_inventarioWhereInput[]
    OR?: movimientos_inventarioWhereInput[]
    NOT?: movimientos_inventarioWhereInput | movimientos_inventarioWhereInput[]
    id?: IntFilter<"movimientos_inventario"> | number
    producto_id?: IntNullableFilter<"movimientos_inventario"> | number | null
    tipo?: StringNullableFilter<"movimientos_inventario"> | string | null
    cantidad?: IntNullableFilter<"movimientos_inventario"> | number | null
    observacion?: StringNullableFilter<"movimientos_inventario"> | string | null
    fecha?: DateTimeNullableFilter<"movimientos_inventario"> | Date | string | null
    productos?: XOR<ProductosNullableScalarRelationFilter, productosWhereInput> | null
  }

  export type movimientos_inventarioOrderByWithRelationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    productos?: productosOrderByWithRelationInput
  }

  export type movimientos_inventarioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: movimientos_inventarioWhereInput | movimientos_inventarioWhereInput[]
    OR?: movimientos_inventarioWhereInput[]
    NOT?: movimientos_inventarioWhereInput | movimientos_inventarioWhereInput[]
    producto_id?: IntNullableFilter<"movimientos_inventario"> | number | null
    tipo?: StringNullableFilter<"movimientos_inventario"> | string | null
    cantidad?: IntNullableFilter<"movimientos_inventario"> | number | null
    observacion?: StringNullableFilter<"movimientos_inventario"> | string | null
    fecha?: DateTimeNullableFilter<"movimientos_inventario"> | Date | string | null
    productos?: XOR<ProductosNullableScalarRelationFilter, productosWhereInput> | null
  }, "id">

  export type movimientos_inventarioOrderByWithAggregationInput = {
    id?: SortOrder
    producto_id?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    cantidad?: SortOrderInput | SortOrder
    observacion?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    _count?: movimientos_inventarioCountOrderByAggregateInput
    _avg?: movimientos_inventarioAvgOrderByAggregateInput
    _max?: movimientos_inventarioMaxOrderByAggregateInput
    _min?: movimientos_inventarioMinOrderByAggregateInput
    _sum?: movimientos_inventarioSumOrderByAggregateInput
  }

  export type movimientos_inventarioScalarWhereWithAggregatesInput = {
    AND?: movimientos_inventarioScalarWhereWithAggregatesInput | movimientos_inventarioScalarWhereWithAggregatesInput[]
    OR?: movimientos_inventarioScalarWhereWithAggregatesInput[]
    NOT?: movimientos_inventarioScalarWhereWithAggregatesInput | movimientos_inventarioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"movimientos_inventario"> | number
    producto_id?: IntNullableWithAggregatesFilter<"movimientos_inventario"> | number | null
    tipo?: StringNullableWithAggregatesFilter<"movimientos_inventario"> | string | null
    cantidad?: IntNullableWithAggregatesFilter<"movimientos_inventario"> | number | null
    observacion?: StringNullableWithAggregatesFilter<"movimientos_inventario"> | string | null
    fecha?: DateTimeNullableWithAggregatesFilter<"movimientos_inventario"> | Date | string | null
  }

  export type productosWhereInput = {
    AND?: productosWhereInput | productosWhereInput[]
    OR?: productosWhereInput[]
    NOT?: productosWhereInput | productosWhereInput[]
    id?: IntFilter<"productos"> | number
    nombre?: StringNullableFilter<"productos"> | string | null
    tipo?: StringNullableFilter<"productos"> | string | null
    precio_compra?: DecimalNullableFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    precio_venta?: DecimalNullableFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableFilter<"productos"> | number | null
    stock_minimo?: IntNullableFilter<"productos"> | number | null
    fecha_caducidad?: DateTimeNullableFilter<"productos"> | Date | string | null
    creado_en?: DateTimeNullableFilter<"productos"> | Date | string | null
    detalle_ventas?: Detalle_ventasListRelationFilter
    movimientos_inventario?: Movimientos_inventarioListRelationFilter
  }

  export type productosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    precio_compra?: SortOrderInput | SortOrder
    precio_venta?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    stock_minimo?: SortOrderInput | SortOrder
    fecha_caducidad?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    detalle_ventas?: detalle_ventasOrderByRelationAggregateInput
    movimientos_inventario?: movimientos_inventarioOrderByRelationAggregateInput
  }

  export type productosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productosWhereInput | productosWhereInput[]
    OR?: productosWhereInput[]
    NOT?: productosWhereInput | productosWhereInput[]
    nombre?: StringNullableFilter<"productos"> | string | null
    tipo?: StringNullableFilter<"productos"> | string | null
    precio_compra?: DecimalNullableFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    precio_venta?: DecimalNullableFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableFilter<"productos"> | number | null
    stock_minimo?: IntNullableFilter<"productos"> | number | null
    fecha_caducidad?: DateTimeNullableFilter<"productos"> | Date | string | null
    creado_en?: DateTimeNullableFilter<"productos"> | Date | string | null
    detalle_ventas?: Detalle_ventasListRelationFilter
    movimientos_inventario?: Movimientos_inventarioListRelationFilter
  }, "id">

  export type productosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    tipo?: SortOrderInput | SortOrder
    precio_compra?: SortOrderInput | SortOrder
    precio_venta?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    stock_minimo?: SortOrderInput | SortOrder
    fecha_caducidad?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    _count?: productosCountOrderByAggregateInput
    _avg?: productosAvgOrderByAggregateInput
    _max?: productosMaxOrderByAggregateInput
    _min?: productosMinOrderByAggregateInput
    _sum?: productosSumOrderByAggregateInput
  }

  export type productosScalarWhereWithAggregatesInput = {
    AND?: productosScalarWhereWithAggregatesInput | productosScalarWhereWithAggregatesInput[]
    OR?: productosScalarWhereWithAggregatesInput[]
    NOT?: productosScalarWhereWithAggregatesInput | productosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"productos"> | number
    nombre?: StringNullableWithAggregatesFilter<"productos"> | string | null
    tipo?: StringNullableWithAggregatesFilter<"productos"> | string | null
    precio_compra?: DecimalNullableWithAggregatesFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    precio_venta?: DecimalNullableWithAggregatesFilter<"productos"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableWithAggregatesFilter<"productos"> | number | null
    stock_minimo?: IntNullableWithAggregatesFilter<"productos"> | number | null
    fecha_caducidad?: DateTimeNullableWithAggregatesFilter<"productos"> | Date | string | null
    creado_en?: DateTimeNullableWithAggregatesFilter<"productos"> | Date | string | null
  }

  export type proveedoresWhereInput = {
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    id?: IntFilter<"proveedores"> | number
    nombre?: StringNullableFilter<"proveedores"> | string | null
    contacto?: StringNullableFilter<"proveedores"> | string | null
    productos?: StringNullableFilter<"proveedores"> | string | null
  }

  export type proveedoresOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    productos?: SortOrderInput | SortOrder
  }

  export type proveedoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    nombre?: StringNullableFilter<"proveedores"> | string | null
    contacto?: StringNullableFilter<"proveedores"> | string | null
    productos?: StringNullableFilter<"proveedores"> | string | null
  }, "id">

  export type proveedoresOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    contacto?: SortOrderInput | SortOrder
    productos?: SortOrderInput | SortOrder
    _count?: proveedoresCountOrderByAggregateInput
    _avg?: proveedoresAvgOrderByAggregateInput
    _max?: proveedoresMaxOrderByAggregateInput
    _min?: proveedoresMinOrderByAggregateInput
    _sum?: proveedoresSumOrderByAggregateInput
  }

  export type proveedoresScalarWhereWithAggregatesInput = {
    AND?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    OR?: proveedoresScalarWhereWithAggregatesInput[]
    NOT?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"proveedores"> | number
    nombre?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    contacto?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    productos?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
  }

  export type reportesWhereInput = {
    AND?: reportesWhereInput | reportesWhereInput[]
    OR?: reportesWhereInput[]
    NOT?: reportesWhereInput | reportesWhereInput[]
    id?: IntFilter<"reportes"> | number
    tipo?: StringNullableFilter<"reportes"> | string | null
    generado_por?: IntNullableFilter<"reportes"> | number | null
    fecha?: DateTimeNullableFilter<"reportes"> | Date | string | null
    datos?: JsonNullableFilter<"reportes">
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }

  export type reportesOrderByWithRelationInput = {
    id?: SortOrder
    tipo?: SortOrderInput | SortOrder
    generado_por?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    datos?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type reportesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: reportesWhereInput | reportesWhereInput[]
    OR?: reportesWhereInput[]
    NOT?: reportesWhereInput | reportesWhereInput[]
    tipo?: StringNullableFilter<"reportes"> | string | null
    generado_por?: IntNullableFilter<"reportes"> | number | null
    fecha?: DateTimeNullableFilter<"reportes"> | Date | string | null
    datos?: JsonNullableFilter<"reportes">
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }, "id">

  export type reportesOrderByWithAggregationInput = {
    id?: SortOrder
    tipo?: SortOrderInput | SortOrder
    generado_por?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    datos?: SortOrderInput | SortOrder
    _count?: reportesCountOrderByAggregateInput
    _avg?: reportesAvgOrderByAggregateInput
    _max?: reportesMaxOrderByAggregateInput
    _min?: reportesMinOrderByAggregateInput
    _sum?: reportesSumOrderByAggregateInput
  }

  export type reportesScalarWhereWithAggregatesInput = {
    AND?: reportesScalarWhereWithAggregatesInput | reportesScalarWhereWithAggregatesInput[]
    OR?: reportesScalarWhereWithAggregatesInput[]
    NOT?: reportesScalarWhereWithAggregatesInput | reportesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"reportes"> | number
    tipo?: StringNullableWithAggregatesFilter<"reportes"> | string | null
    generado_por?: IntNullableWithAggregatesFilter<"reportes"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"reportes"> | Date | string | null
    datos?: JsonNullableWithAggregatesFilter<"reportes">
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    id?: IntFilter<"usuarios"> | number
    nombre?: StringNullableFilter<"usuarios"> | string | null
    email?: StringFilter<"usuarios"> | string
    password?: StringFilter<"usuarios"> | string
    rol?: StringNullableFilter<"usuarios"> | string | null
    creado_en?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    reportes?: ReportesListRelationFilter
    ventas?: VentasListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    reportes?: reportesOrderByRelationAggregateInput
    ventas?: ventasOrderByRelationAggregateInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    nombre?: StringNullableFilter<"usuarios"> | string | null
    password?: StringFilter<"usuarios"> | string
    rol?: StringNullableFilter<"usuarios"> | string | null
    creado_en?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    reportes?: ReportesListRelationFilter
    ventas?: VentasListRelationFilter
  }, "id" | "email">

  export type usuariosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrderInput | SortOrder
    creado_en?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"usuarios"> | number
    nombre?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    email?: StringWithAggregatesFilter<"usuarios"> | string
    password?: StringWithAggregatesFilter<"usuarios"> | string
    rol?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    creado_en?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  }

  export type ventasWhereInput = {
    AND?: ventasWhereInput | ventasWhereInput[]
    OR?: ventasWhereInput[]
    NOT?: ventasWhereInput | ventasWhereInput[]
    id?: IntFilter<"ventas"> | number
    usuario_id?: IntNullableFilter<"ventas"> | number | null
    fecha?: DateTimeNullableFilter<"ventas"> | Date | string | null
    total?: DecimalNullableFilter<"ventas"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"ventas"> | string | null
    detalle_ventas?: Detalle_ventasListRelationFilter
    facturas?: FacturasListRelationFilter
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }

  export type ventasOrderByWithRelationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    detalle_ventas?: detalle_ventasOrderByRelationAggregateInput
    facturas?: facturasOrderByRelationAggregateInput
    usuarios?: usuariosOrderByWithRelationInput
  }

  export type ventasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ventasWhereInput | ventasWhereInput[]
    OR?: ventasWhereInput[]
    NOT?: ventasWhereInput | ventasWhereInput[]
    usuario_id?: IntNullableFilter<"ventas"> | number | null
    fecha?: DateTimeNullableFilter<"ventas"> | Date | string | null
    total?: DecimalNullableFilter<"ventas"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"ventas"> | string | null
    detalle_ventas?: Detalle_ventasListRelationFilter
    facturas?: FacturasListRelationFilter
    usuarios?: XOR<UsuariosNullableScalarRelationFilter, usuariosWhereInput> | null
  }, "id">

  export type ventasOrderByWithAggregationInput = {
    id?: SortOrder
    usuario_id?: SortOrderInput | SortOrder
    fecha?: SortOrderInput | SortOrder
    total?: SortOrderInput | SortOrder
    metodo_pago?: SortOrderInput | SortOrder
    _count?: ventasCountOrderByAggregateInput
    _avg?: ventasAvgOrderByAggregateInput
    _max?: ventasMaxOrderByAggregateInput
    _min?: ventasMinOrderByAggregateInput
    _sum?: ventasSumOrderByAggregateInput
  }

  export type ventasScalarWhereWithAggregatesInput = {
    AND?: ventasScalarWhereWithAggregatesInput | ventasScalarWhereWithAggregatesInput[]
    OR?: ventasScalarWhereWithAggregatesInput[]
    NOT?: ventasScalarWhereWithAggregatesInput | ventasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ventas"> | number
    usuario_id?: IntNullableWithAggregatesFilter<"ventas"> | number | null
    fecha?: DateTimeNullableWithAggregatesFilter<"ventas"> | Date | string | null
    total?: DecimalNullableWithAggregatesFilter<"ventas"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableWithAggregatesFilter<"ventas"> | string | null
  }

  export type configuracionCreateInput = {
    clave?: string | null
    valor?: string | null
  }

  export type configuracionUncheckedCreateInput = {
    id?: number
    clave?: string | null
    valor?: string | null
  }

  export type configuracionUpdateInput = {
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type configuracionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type configuracionCreateManyInput = {
    id?: number
    clave?: string | null
    valor?: string | null
  }

  export type configuracionUpdateManyMutationInput = {
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type configuracionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    clave?: NullableStringFieldUpdateOperationsInput | string | null
    valor?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalle_ventasCreateInput = {
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
    productos?: productosCreateNestedOneWithoutDetalle_ventasInput
    ventas?: ventasCreateNestedOneWithoutDetalle_ventasInput
  }

  export type detalle_ventasUncheckedCreateInput = {
    id?: number
    venta_id?: number | null
    producto_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasUpdateInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productos?: productosUpdateOneWithoutDetalle_ventasNestedInput
    ventas?: ventasUpdateOneWithoutDetalle_ventasNestedInput
  }

  export type detalle_ventasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasCreateManyInput = {
    id?: number
    venta_id?: number | null
    producto_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasUpdateManyMutationInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type facturasCreateInput = {
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
    ventas?: ventasCreateNestedOneWithoutFacturasInput
  }

  export type facturasUncheckedCreateInput = {
    id?: number
    venta_id?: number | null
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type facturasUpdateInput = {
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ventas?: ventasUpdateOneWithoutFacturasNestedInput
  }

  export type facturasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type facturasCreateManyInput = {
    id?: number
    venta_id?: number | null
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type facturasUpdateManyMutationInput = {
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type facturasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type movimientos_inventarioCreateInput = {
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
    productos?: productosCreateNestedOneWithoutMovimientos_inventarioInput
  }

  export type movimientos_inventarioUncheckedCreateInput = {
    id?: number
    producto_id?: number | null
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
  }

  export type movimientos_inventarioUpdateInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    productos?: productosUpdateOneWithoutMovimientos_inventarioNestedInput
  }

  export type movimientos_inventarioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type movimientos_inventarioCreateManyInput = {
    id?: number
    producto_id?: number | null
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
  }

  export type movimientos_inventarioUpdateManyMutationInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type movimientos_inventarioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productosCreateInput = {
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    detalle_ventas?: detalle_ventasCreateNestedManyWithoutProductosInput
    movimientos_inventario?: movimientos_inventarioCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    detalle_ventas?: detalle_ventasUncheckedCreateNestedManyWithoutProductosInput
    movimientos_inventario?: movimientos_inventarioUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_ventas?: detalle_ventasUpdateManyWithoutProductosNestedInput
    movimientos_inventario?: movimientos_inventarioUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_ventas?: detalle_ventasUncheckedUpdateManyWithoutProductosNestedInput
    movimientos_inventario?: movimientos_inventarioUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type productosCreateManyInput = {
    id?: number
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
  }

  export type productosUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proveedoresCreateInput = {
    nombre?: string | null
    contacto?: string | null
    productos?: string | null
  }

  export type proveedoresUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    contacto?: string | null
    productos?: string | null
  }

  export type proveedoresUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedoresCreateManyInput = {
    id?: number
    nombre?: string | null
    contacto?: string | null
    productos?: string | null
  }

  export type proveedoresUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type proveedoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    contacto?: NullableStringFieldUpdateOperationsInput | string | null
    productos?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type reportesCreateInput = {
    tipo?: string | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    usuarios?: usuariosCreateNestedOneWithoutReportesInput
  }

  export type reportesUncheckedCreateInput = {
    id?: number
    tipo?: string | null
    generado_por?: number | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUpdateInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
    usuarios?: usuariosUpdateOneWithoutReportesNestedInput
  }

  export type reportesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    generado_por?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesCreateManyInput = {
    id?: number
    tipo?: string | null
    generado_por?: number | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUpdateManyMutationInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    generado_por?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type usuariosCreateInput = {
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    reportes?: reportesCreateNestedManyWithoutUsuariosInput
    ventas?: ventasCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    reportes?: reportesUncheckedCreateNestedManyWithoutUsuariosInput
    ventas?: ventasUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reportes?: reportesUpdateManyWithoutUsuariosNestedInput
    ventas?: ventasUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reportes?: reportesUncheckedUpdateManyWithoutUsuariosNestedInput
    ventas?: ventasUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosCreateManyInput = {
    id?: number
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
  }

  export type usuariosUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ventasCreateInput = {
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasCreateNestedManyWithoutVentasInput
    facturas?: facturasCreateNestedManyWithoutVentasInput
    usuarios?: usuariosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateInput = {
    id?: number
    usuario_id?: number | null
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasUncheckedCreateNestedManyWithoutVentasInput
    facturas?: facturasUncheckedCreateNestedManyWithoutVentasInput
  }

  export type ventasUpdateInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUpdateManyWithoutVentasNestedInput
    facturas?: facturasUpdateManyWithoutVentasNestedInput
    usuarios?: usuariosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUncheckedUpdateManyWithoutVentasNestedInput
    facturas?: facturasUncheckedUpdateManyWithoutVentasNestedInput
  }

  export type ventasCreateManyInput = {
    id?: number
    usuario_id?: number | null
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
  }

  export type ventasUpdateManyMutationInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ventasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type configuracionCountOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
  }

  export type configuracionAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type configuracionMaxOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
  }

  export type configuracionMinOrderByAggregateInput = {
    id?: SortOrder
    clave?: SortOrder
    valor?: SortOrder
  }

  export type configuracionSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type ProductosNullableScalarRelationFilter = {
    is?: productosWhereInput | null
    isNot?: productosWhereInput | null
  }

  export type VentasNullableScalarRelationFilter = {
    is?: ventasWhereInput | null
    isNot?: ventasWhereInput | null
  }

  export type detalle_ventasCountOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventasAvgOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventasMaxOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventasMinOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type detalle_ventasSumOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
    precio_unitario?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type facturasCountOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    folio?: SortOrder
    total?: SortOrder
    fecha?: SortOrder
  }

  export type facturasAvgOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    total?: SortOrder
  }

  export type facturasMaxOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    folio?: SortOrder
    total?: SortOrder
    fecha?: SortOrder
  }

  export type facturasMinOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    folio?: SortOrder
    total?: SortOrder
    fecha?: SortOrder
  }

  export type facturasSumOrderByAggregateInput = {
    id?: SortOrder
    venta_id?: SortOrder
    total?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type movimientos_inventarioCountOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    tipo?: SortOrder
    cantidad?: SortOrder
    observacion?: SortOrder
    fecha?: SortOrder
  }

  export type movimientos_inventarioAvgOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type movimientos_inventarioMaxOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    tipo?: SortOrder
    cantidad?: SortOrder
    observacion?: SortOrder
    fecha?: SortOrder
  }

  export type movimientos_inventarioMinOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    tipo?: SortOrder
    cantidad?: SortOrder
    observacion?: SortOrder
    fecha?: SortOrder
  }

  export type movimientos_inventarioSumOrderByAggregateInput = {
    id?: SortOrder
    producto_id?: SortOrder
    cantidad?: SortOrder
  }

  export type Detalle_ventasListRelationFilter = {
    every?: detalle_ventasWhereInput
    some?: detalle_ventasWhereInput
    none?: detalle_ventasWhereInput
  }

  export type Movimientos_inventarioListRelationFilter = {
    every?: movimientos_inventarioWhereInput
    some?: movimientos_inventarioWhereInput
    none?: movimientos_inventarioWhereInput
  }

  export type detalle_ventasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type movimientos_inventarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    precio_compra?: SortOrder
    precio_venta?: SortOrder
    stock?: SortOrder
    stock_minimo?: SortOrder
    fecha_caducidad?: SortOrder
    creado_en?: SortOrder
  }

  export type productosAvgOrderByAggregateInput = {
    id?: SortOrder
    precio_compra?: SortOrder
    precio_venta?: SortOrder
    stock?: SortOrder
    stock_minimo?: SortOrder
  }

  export type productosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    precio_compra?: SortOrder
    precio_venta?: SortOrder
    stock?: SortOrder
    stock_minimo?: SortOrder
    fecha_caducidad?: SortOrder
    creado_en?: SortOrder
  }

  export type productosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo?: SortOrder
    precio_compra?: SortOrder
    precio_venta?: SortOrder
    stock?: SortOrder
    stock_minimo?: SortOrder
    fecha_caducidad?: SortOrder
    creado_en?: SortOrder
  }

  export type productosSumOrderByAggregateInput = {
    id?: SortOrder
    precio_compra?: SortOrder
    precio_venta?: SortOrder
    stock?: SortOrder
    stock_minimo?: SortOrder
  }

  export type proveedoresCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    contacto?: SortOrder
    productos?: SortOrder
  }

  export type proveedoresAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type proveedoresMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    contacto?: SortOrder
    productos?: SortOrder
  }

  export type proveedoresMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    contacto?: SortOrder
    productos?: SortOrder
  }

  export type proveedoresSumOrderByAggregateInput = {
    id?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type UsuariosNullableScalarRelationFilter = {
    is?: usuariosWhereInput | null
    isNot?: usuariosWhereInput | null
  }

  export type reportesCountOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    generado_por?: SortOrder
    fecha?: SortOrder
    datos?: SortOrder
  }

  export type reportesAvgOrderByAggregateInput = {
    id?: SortOrder
    generado_por?: SortOrder
  }

  export type reportesMaxOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    generado_por?: SortOrder
    fecha?: SortOrder
  }

  export type reportesMinOrderByAggregateInput = {
    id?: SortOrder
    tipo?: SortOrder
    generado_por?: SortOrder
    fecha?: SortOrder
  }

  export type reportesSumOrderByAggregateInput = {
    id?: SortOrder
    generado_por?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type ReportesListRelationFilter = {
    every?: reportesWhereInput
    some?: reportesWhereInput
    none?: reportesWhereInput
  }

  export type VentasListRelationFilter = {
    every?: ventasWhereInput
    some?: ventasWhereInput
    none?: ventasWhereInput
  }

  export type reportesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ventasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    creado_en?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type FacturasListRelationFilter = {
    every?: facturasWhereInput
    some?: facturasWhereInput
    none?: facturasWhereInput
  }

  export type facturasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ventasCountOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type ventasAvgOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    total?: SortOrder
  }

  export type ventasMaxOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type ventasMinOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    fecha?: SortOrder
    total?: SortOrder
    metodo_pago?: SortOrder
  }

  export type ventasSumOrderByAggregateInput = {
    id?: SortOrder
    usuario_id?: SortOrder
    total?: SortOrder
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type productosCreateNestedOneWithoutDetalle_ventasInput = {
    create?: XOR<productosCreateWithoutDetalle_ventasInput, productosUncheckedCreateWithoutDetalle_ventasInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_ventasInput
    connect?: productosWhereUniqueInput
  }

  export type ventasCreateNestedOneWithoutDetalle_ventasInput = {
    create?: XOR<ventasCreateWithoutDetalle_ventasInput, ventasUncheckedCreateWithoutDetalle_ventasInput>
    connectOrCreate?: ventasCreateOrConnectWithoutDetalle_ventasInput
    connect?: ventasWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type productosUpdateOneWithoutDetalle_ventasNestedInput = {
    create?: XOR<productosCreateWithoutDetalle_ventasInput, productosUncheckedCreateWithoutDetalle_ventasInput>
    connectOrCreate?: productosCreateOrConnectWithoutDetalle_ventasInput
    upsert?: productosUpsertWithoutDetalle_ventasInput
    disconnect?: productosWhereInput | boolean
    delete?: productosWhereInput | boolean
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutDetalle_ventasInput, productosUpdateWithoutDetalle_ventasInput>, productosUncheckedUpdateWithoutDetalle_ventasInput>
  }

  export type ventasUpdateOneWithoutDetalle_ventasNestedInput = {
    create?: XOR<ventasCreateWithoutDetalle_ventasInput, ventasUncheckedCreateWithoutDetalle_ventasInput>
    connectOrCreate?: ventasCreateOrConnectWithoutDetalle_ventasInput
    upsert?: ventasUpsertWithoutDetalle_ventasInput
    disconnect?: ventasWhereInput | boolean
    delete?: ventasWhereInput | boolean
    connect?: ventasWhereUniqueInput
    update?: XOR<XOR<ventasUpdateToOneWithWhereWithoutDetalle_ventasInput, ventasUpdateWithoutDetalle_ventasInput>, ventasUncheckedUpdateWithoutDetalle_ventasInput>
  }

  export type ventasCreateNestedOneWithoutFacturasInput = {
    create?: XOR<ventasCreateWithoutFacturasInput, ventasUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ventasCreateOrConnectWithoutFacturasInput
    connect?: ventasWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type ventasUpdateOneWithoutFacturasNestedInput = {
    create?: XOR<ventasCreateWithoutFacturasInput, ventasUncheckedCreateWithoutFacturasInput>
    connectOrCreate?: ventasCreateOrConnectWithoutFacturasInput
    upsert?: ventasUpsertWithoutFacturasInput
    disconnect?: ventasWhereInput | boolean
    delete?: ventasWhereInput | boolean
    connect?: ventasWhereUniqueInput
    update?: XOR<XOR<ventasUpdateToOneWithWhereWithoutFacturasInput, ventasUpdateWithoutFacturasInput>, ventasUncheckedUpdateWithoutFacturasInput>
  }

  export type productosCreateNestedOneWithoutMovimientos_inventarioInput = {
    create?: XOR<productosCreateWithoutMovimientos_inventarioInput, productosUncheckedCreateWithoutMovimientos_inventarioInput>
    connectOrCreate?: productosCreateOrConnectWithoutMovimientos_inventarioInput
    connect?: productosWhereUniqueInput
  }

  export type productosUpdateOneWithoutMovimientos_inventarioNestedInput = {
    create?: XOR<productosCreateWithoutMovimientos_inventarioInput, productosUncheckedCreateWithoutMovimientos_inventarioInput>
    connectOrCreate?: productosCreateOrConnectWithoutMovimientos_inventarioInput
    upsert?: productosUpsertWithoutMovimientos_inventarioInput
    disconnect?: productosWhereInput | boolean
    delete?: productosWhereInput | boolean
    connect?: productosWhereUniqueInput
    update?: XOR<XOR<productosUpdateToOneWithWhereWithoutMovimientos_inventarioInput, productosUpdateWithoutMovimientos_inventarioInput>, productosUncheckedUpdateWithoutMovimientos_inventarioInput>
  }

  export type detalle_ventasCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput> | detalle_ventasCreateWithoutProductosInput[] | detalle_ventasUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutProductosInput | detalle_ventasCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_ventasCreateManyProductosInputEnvelope
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
  }

  export type movimientos_inventarioCreateNestedManyWithoutProductosInput = {
    create?: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput> | movimientos_inventarioCreateWithoutProductosInput[] | movimientos_inventarioUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: movimientos_inventarioCreateOrConnectWithoutProductosInput | movimientos_inventarioCreateOrConnectWithoutProductosInput[]
    createMany?: movimientos_inventarioCreateManyProductosInputEnvelope
    connect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
  }

  export type detalle_ventasUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput> | detalle_ventasCreateWithoutProductosInput[] | detalle_ventasUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutProductosInput | detalle_ventasCreateOrConnectWithoutProductosInput[]
    createMany?: detalle_ventasCreateManyProductosInputEnvelope
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
  }

  export type movimientos_inventarioUncheckedCreateNestedManyWithoutProductosInput = {
    create?: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput> | movimientos_inventarioCreateWithoutProductosInput[] | movimientos_inventarioUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: movimientos_inventarioCreateOrConnectWithoutProductosInput | movimientos_inventarioCreateOrConnectWithoutProductosInput[]
    createMany?: movimientos_inventarioCreateManyProductosInputEnvelope
    connect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
  }

  export type detalle_ventasUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput> | detalle_ventasCreateWithoutProductosInput[] | detalle_ventasUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutProductosInput | detalle_ventasCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_ventasUpsertWithWhereUniqueWithoutProductosInput | detalle_ventasUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_ventasCreateManyProductosInputEnvelope
    set?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    disconnect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    delete?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    update?: detalle_ventasUpdateWithWhereUniqueWithoutProductosInput | detalle_ventasUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_ventasUpdateManyWithWhereWithoutProductosInput | detalle_ventasUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
  }

  export type movimientos_inventarioUpdateManyWithoutProductosNestedInput = {
    create?: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput> | movimientos_inventarioCreateWithoutProductosInput[] | movimientos_inventarioUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: movimientos_inventarioCreateOrConnectWithoutProductosInput | movimientos_inventarioCreateOrConnectWithoutProductosInput[]
    upsert?: movimientos_inventarioUpsertWithWhereUniqueWithoutProductosInput | movimientos_inventarioUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: movimientos_inventarioCreateManyProductosInputEnvelope
    set?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    disconnect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    delete?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    connect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    update?: movimientos_inventarioUpdateWithWhereUniqueWithoutProductosInput | movimientos_inventarioUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: movimientos_inventarioUpdateManyWithWhereWithoutProductosInput | movimientos_inventarioUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: movimientos_inventarioScalarWhereInput | movimientos_inventarioScalarWhereInput[]
  }

  export type detalle_ventasUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput> | detalle_ventasCreateWithoutProductosInput[] | detalle_ventasUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutProductosInput | detalle_ventasCreateOrConnectWithoutProductosInput[]
    upsert?: detalle_ventasUpsertWithWhereUniqueWithoutProductosInput | detalle_ventasUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: detalle_ventasCreateManyProductosInputEnvelope
    set?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    disconnect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    delete?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    update?: detalle_ventasUpdateWithWhereUniqueWithoutProductosInput | detalle_ventasUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: detalle_ventasUpdateManyWithWhereWithoutProductosInput | detalle_ventasUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
  }

  export type movimientos_inventarioUncheckedUpdateManyWithoutProductosNestedInput = {
    create?: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput> | movimientos_inventarioCreateWithoutProductosInput[] | movimientos_inventarioUncheckedCreateWithoutProductosInput[]
    connectOrCreate?: movimientos_inventarioCreateOrConnectWithoutProductosInput | movimientos_inventarioCreateOrConnectWithoutProductosInput[]
    upsert?: movimientos_inventarioUpsertWithWhereUniqueWithoutProductosInput | movimientos_inventarioUpsertWithWhereUniqueWithoutProductosInput[]
    createMany?: movimientos_inventarioCreateManyProductosInputEnvelope
    set?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    disconnect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    delete?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    connect?: movimientos_inventarioWhereUniqueInput | movimientos_inventarioWhereUniqueInput[]
    update?: movimientos_inventarioUpdateWithWhereUniqueWithoutProductosInput | movimientos_inventarioUpdateWithWhereUniqueWithoutProductosInput[]
    updateMany?: movimientos_inventarioUpdateManyWithWhereWithoutProductosInput | movimientos_inventarioUpdateManyWithWhereWithoutProductosInput[]
    deleteMany?: movimientos_inventarioScalarWhereInput | movimientos_inventarioScalarWhereInput[]
  }

  export type usuariosCreateNestedOneWithoutReportesInput = {
    create?: XOR<usuariosCreateWithoutReportesInput, usuariosUncheckedCreateWithoutReportesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutReportesInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosUpdateOneWithoutReportesNestedInput = {
    create?: XOR<usuariosCreateWithoutReportesInput, usuariosUncheckedCreateWithoutReportesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutReportesInput
    upsert?: usuariosUpsertWithoutReportesInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutReportesInput, usuariosUpdateWithoutReportesInput>, usuariosUncheckedUpdateWithoutReportesInput>
  }

  export type reportesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput> | reportesCreateWithoutUsuariosInput[] | reportesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsuariosInput | reportesCreateOrConnectWithoutUsuariosInput[]
    createMany?: reportesCreateManyUsuariosInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type ventasCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput> | ventasCreateWithoutUsuariosInput[] | ventasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsuariosInput | ventasCreateOrConnectWithoutUsuariosInput[]
    createMany?: ventasCreateManyUsuariosInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type reportesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput> | reportesCreateWithoutUsuariosInput[] | reportesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsuariosInput | reportesCreateOrConnectWithoutUsuariosInput[]
    createMany?: reportesCreateManyUsuariosInputEnvelope
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
  }

  export type ventasUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput> | ventasCreateWithoutUsuariosInput[] | ventasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsuariosInput | ventasCreateOrConnectWithoutUsuariosInput[]
    createMany?: ventasCreateManyUsuariosInputEnvelope
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type reportesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput> | reportesCreateWithoutUsuariosInput[] | reportesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsuariosInput | reportesCreateOrConnectWithoutUsuariosInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutUsuariosInput | reportesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: reportesCreateManyUsuariosInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutUsuariosInput | reportesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutUsuariosInput | reportesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type ventasUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput> | ventasCreateWithoutUsuariosInput[] | ventasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsuariosInput | ventasCreateOrConnectWithoutUsuariosInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutUsuariosInput | ventasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: ventasCreateManyUsuariosInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutUsuariosInput | ventasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutUsuariosInput | ventasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type reportesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput> | reportesCreateWithoutUsuariosInput[] | reportesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: reportesCreateOrConnectWithoutUsuariosInput | reportesCreateOrConnectWithoutUsuariosInput[]
    upsert?: reportesUpsertWithWhereUniqueWithoutUsuariosInput | reportesUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: reportesCreateManyUsuariosInputEnvelope
    set?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    disconnect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    delete?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    connect?: reportesWhereUniqueInput | reportesWhereUniqueInput[]
    update?: reportesUpdateWithWhereUniqueWithoutUsuariosInput | reportesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: reportesUpdateManyWithWhereWithoutUsuariosInput | reportesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: reportesScalarWhereInput | reportesScalarWhereInput[]
  }

  export type ventasUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput> | ventasCreateWithoutUsuariosInput[] | ventasUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: ventasCreateOrConnectWithoutUsuariosInput | ventasCreateOrConnectWithoutUsuariosInput[]
    upsert?: ventasUpsertWithWhereUniqueWithoutUsuariosInput | ventasUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: ventasCreateManyUsuariosInputEnvelope
    set?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    disconnect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    delete?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    connect?: ventasWhereUniqueInput | ventasWhereUniqueInput[]
    update?: ventasUpdateWithWhereUniqueWithoutUsuariosInput | ventasUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: ventasUpdateManyWithWhereWithoutUsuariosInput | ventasUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: ventasScalarWhereInput | ventasScalarWhereInput[]
  }

  export type detalle_ventasCreateNestedManyWithoutVentasInput = {
    create?: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput> | detalle_ventasCreateWithoutVentasInput[] | detalle_ventasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutVentasInput | detalle_ventasCreateOrConnectWithoutVentasInput[]
    createMany?: detalle_ventasCreateManyVentasInputEnvelope
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
  }

  export type facturasCreateNestedManyWithoutVentasInput = {
    create?: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput> | facturasCreateWithoutVentasInput[] | facturasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: facturasCreateOrConnectWithoutVentasInput | facturasCreateOrConnectWithoutVentasInput[]
    createMany?: facturasCreateManyVentasInputEnvelope
    connect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
  }

  export type usuariosCreateNestedOneWithoutVentasInput = {
    create?: XOR<usuariosCreateWithoutVentasInput, usuariosUncheckedCreateWithoutVentasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutVentasInput
    connect?: usuariosWhereUniqueInput
  }

  export type detalle_ventasUncheckedCreateNestedManyWithoutVentasInput = {
    create?: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput> | detalle_ventasCreateWithoutVentasInput[] | detalle_ventasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutVentasInput | detalle_ventasCreateOrConnectWithoutVentasInput[]
    createMany?: detalle_ventasCreateManyVentasInputEnvelope
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
  }

  export type facturasUncheckedCreateNestedManyWithoutVentasInput = {
    create?: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput> | facturasCreateWithoutVentasInput[] | facturasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: facturasCreateOrConnectWithoutVentasInput | facturasCreateOrConnectWithoutVentasInput[]
    createMany?: facturasCreateManyVentasInputEnvelope
    connect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
  }

  export type detalle_ventasUpdateManyWithoutVentasNestedInput = {
    create?: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput> | detalle_ventasCreateWithoutVentasInput[] | detalle_ventasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutVentasInput | detalle_ventasCreateOrConnectWithoutVentasInput[]
    upsert?: detalle_ventasUpsertWithWhereUniqueWithoutVentasInput | detalle_ventasUpsertWithWhereUniqueWithoutVentasInput[]
    createMany?: detalle_ventasCreateManyVentasInputEnvelope
    set?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    disconnect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    delete?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    update?: detalle_ventasUpdateWithWhereUniqueWithoutVentasInput | detalle_ventasUpdateWithWhereUniqueWithoutVentasInput[]
    updateMany?: detalle_ventasUpdateManyWithWhereWithoutVentasInput | detalle_ventasUpdateManyWithWhereWithoutVentasInput[]
    deleteMany?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
  }

  export type facturasUpdateManyWithoutVentasNestedInput = {
    create?: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput> | facturasCreateWithoutVentasInput[] | facturasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: facturasCreateOrConnectWithoutVentasInput | facturasCreateOrConnectWithoutVentasInput[]
    upsert?: facturasUpsertWithWhereUniqueWithoutVentasInput | facturasUpsertWithWhereUniqueWithoutVentasInput[]
    createMany?: facturasCreateManyVentasInputEnvelope
    set?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    disconnect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    delete?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    connect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    update?: facturasUpdateWithWhereUniqueWithoutVentasInput | facturasUpdateWithWhereUniqueWithoutVentasInput[]
    updateMany?: facturasUpdateManyWithWhereWithoutVentasInput | facturasUpdateManyWithWhereWithoutVentasInput[]
    deleteMany?: facturasScalarWhereInput | facturasScalarWhereInput[]
  }

  export type usuariosUpdateOneWithoutVentasNestedInput = {
    create?: XOR<usuariosCreateWithoutVentasInput, usuariosUncheckedCreateWithoutVentasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutVentasInput
    upsert?: usuariosUpsertWithoutVentasInput
    disconnect?: usuariosWhereInput | boolean
    delete?: usuariosWhereInput | boolean
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutVentasInput, usuariosUpdateWithoutVentasInput>, usuariosUncheckedUpdateWithoutVentasInput>
  }

  export type detalle_ventasUncheckedUpdateManyWithoutVentasNestedInput = {
    create?: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput> | detalle_ventasCreateWithoutVentasInput[] | detalle_ventasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: detalle_ventasCreateOrConnectWithoutVentasInput | detalle_ventasCreateOrConnectWithoutVentasInput[]
    upsert?: detalle_ventasUpsertWithWhereUniqueWithoutVentasInput | detalle_ventasUpsertWithWhereUniqueWithoutVentasInput[]
    createMany?: detalle_ventasCreateManyVentasInputEnvelope
    set?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    disconnect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    delete?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    connect?: detalle_ventasWhereUniqueInput | detalle_ventasWhereUniqueInput[]
    update?: detalle_ventasUpdateWithWhereUniqueWithoutVentasInput | detalle_ventasUpdateWithWhereUniqueWithoutVentasInput[]
    updateMany?: detalle_ventasUpdateManyWithWhereWithoutVentasInput | detalle_ventasUpdateManyWithWhereWithoutVentasInput[]
    deleteMany?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
  }

  export type facturasUncheckedUpdateManyWithoutVentasNestedInput = {
    create?: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput> | facturasCreateWithoutVentasInput[] | facturasUncheckedCreateWithoutVentasInput[]
    connectOrCreate?: facturasCreateOrConnectWithoutVentasInput | facturasCreateOrConnectWithoutVentasInput[]
    upsert?: facturasUpsertWithWhereUniqueWithoutVentasInput | facturasUpsertWithWhereUniqueWithoutVentasInput[]
    createMany?: facturasCreateManyVentasInputEnvelope
    set?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    disconnect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    delete?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    connect?: facturasWhereUniqueInput | facturasWhereUniqueInput[]
    update?: facturasUpdateWithWhereUniqueWithoutVentasInput | facturasUpdateWithWhereUniqueWithoutVentasInput[]
    updateMany?: facturasUpdateManyWithWhereWithoutVentasInput | facturasUpdateManyWithWhereWithoutVentasInput[]
    deleteMany?: facturasScalarWhereInput | facturasScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type productosCreateWithoutDetalle_ventasInput = {
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    movimientos_inventario?: movimientos_inventarioCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutDetalle_ventasInput = {
    id?: number
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    movimientos_inventario?: movimientos_inventarioUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutDetalle_ventasInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutDetalle_ventasInput, productosUncheckedCreateWithoutDetalle_ventasInput>
  }

  export type ventasCreateWithoutDetalle_ventasInput = {
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    facturas?: facturasCreateNestedManyWithoutVentasInput
    usuarios?: usuariosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutDetalle_ventasInput = {
    id?: number
    usuario_id?: number | null
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    facturas?: facturasUncheckedCreateNestedManyWithoutVentasInput
  }

  export type ventasCreateOrConnectWithoutDetalle_ventasInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutDetalle_ventasInput, ventasUncheckedCreateWithoutDetalle_ventasInput>
  }

  export type productosUpsertWithoutDetalle_ventasInput = {
    update: XOR<productosUpdateWithoutDetalle_ventasInput, productosUncheckedUpdateWithoutDetalle_ventasInput>
    create: XOR<productosCreateWithoutDetalle_ventasInput, productosUncheckedCreateWithoutDetalle_ventasInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutDetalle_ventasInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutDetalle_ventasInput, productosUncheckedUpdateWithoutDetalle_ventasInput>
  }

  export type productosUpdateWithoutDetalle_ventasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    movimientos_inventario?: movimientos_inventarioUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutDetalle_ventasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    movimientos_inventario?: movimientos_inventarioUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type ventasUpsertWithoutDetalle_ventasInput = {
    update: XOR<ventasUpdateWithoutDetalle_ventasInput, ventasUncheckedUpdateWithoutDetalle_ventasInput>
    create: XOR<ventasCreateWithoutDetalle_ventasInput, ventasUncheckedCreateWithoutDetalle_ventasInput>
    where?: ventasWhereInput
  }

  export type ventasUpdateToOneWithWhereWithoutDetalle_ventasInput = {
    where?: ventasWhereInput
    data: XOR<ventasUpdateWithoutDetalle_ventasInput, ventasUncheckedUpdateWithoutDetalle_ventasInput>
  }

  export type ventasUpdateWithoutDetalle_ventasInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: facturasUpdateManyWithoutVentasNestedInput
    usuarios?: usuariosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutDetalle_ventasInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    facturas?: facturasUncheckedUpdateManyWithoutVentasNestedInput
  }

  export type ventasCreateWithoutFacturasInput = {
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasCreateNestedManyWithoutVentasInput
    usuarios?: usuariosCreateNestedOneWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutFacturasInput = {
    id?: number
    usuario_id?: number | null
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasUncheckedCreateNestedManyWithoutVentasInput
  }

  export type ventasCreateOrConnectWithoutFacturasInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutFacturasInput, ventasUncheckedCreateWithoutFacturasInput>
  }

  export type ventasUpsertWithoutFacturasInput = {
    update: XOR<ventasUpdateWithoutFacturasInput, ventasUncheckedUpdateWithoutFacturasInput>
    create: XOR<ventasCreateWithoutFacturasInput, ventasUncheckedCreateWithoutFacturasInput>
    where?: ventasWhereInput
  }

  export type ventasUpdateToOneWithWhereWithoutFacturasInput = {
    where?: ventasWhereInput
    data: XOR<ventasUpdateWithoutFacturasInput, ventasUncheckedUpdateWithoutFacturasInput>
  }

  export type ventasUpdateWithoutFacturasInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUpdateManyWithoutVentasNestedInput
    usuarios?: usuariosUpdateOneWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutFacturasInput = {
    id?: IntFieldUpdateOperationsInput | number
    usuario_id?: NullableIntFieldUpdateOperationsInput | number | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUncheckedUpdateManyWithoutVentasNestedInput
  }

  export type productosCreateWithoutMovimientos_inventarioInput = {
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    detalle_ventas?: detalle_ventasCreateNestedManyWithoutProductosInput
  }

  export type productosUncheckedCreateWithoutMovimientos_inventarioInput = {
    id?: number
    nombre?: string | null
    tipo?: string | null
    precio_compra?: Decimal | DecimalJsLike | number | string | null
    precio_venta?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    stock_minimo?: number | null
    fecha_caducidad?: Date | string | null
    creado_en?: Date | string | null
    detalle_ventas?: detalle_ventasUncheckedCreateNestedManyWithoutProductosInput
  }

  export type productosCreateOrConnectWithoutMovimientos_inventarioInput = {
    where: productosWhereUniqueInput
    create: XOR<productosCreateWithoutMovimientos_inventarioInput, productosUncheckedCreateWithoutMovimientos_inventarioInput>
  }

  export type productosUpsertWithoutMovimientos_inventarioInput = {
    update: XOR<productosUpdateWithoutMovimientos_inventarioInput, productosUncheckedUpdateWithoutMovimientos_inventarioInput>
    create: XOR<productosCreateWithoutMovimientos_inventarioInput, productosUncheckedCreateWithoutMovimientos_inventarioInput>
    where?: productosWhereInput
  }

  export type productosUpdateToOneWithWhereWithoutMovimientos_inventarioInput = {
    where?: productosWhereInput
    data: XOR<productosUpdateWithoutMovimientos_inventarioInput, productosUncheckedUpdateWithoutMovimientos_inventarioInput>
  }

  export type productosUpdateWithoutMovimientos_inventarioInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_ventas?: detalle_ventasUpdateManyWithoutProductosNestedInput
  }

  export type productosUncheckedUpdateWithoutMovimientos_inventarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    precio_compra?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    precio_venta?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    stock_minimo?: NullableIntFieldUpdateOperationsInput | number | null
    fecha_caducidad?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_ventas?: detalle_ventasUncheckedUpdateManyWithoutProductosNestedInput
  }

  export type detalle_ventasCreateWithoutProductosInput = {
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
    ventas?: ventasCreateNestedOneWithoutDetalle_ventasInput
  }

  export type detalle_ventasUncheckedCreateWithoutProductosInput = {
    id?: number
    venta_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasCreateOrConnectWithoutProductosInput = {
    where: detalle_ventasWhereUniqueInput
    create: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput>
  }

  export type detalle_ventasCreateManyProductosInputEnvelope = {
    data: detalle_ventasCreateManyProductosInput | detalle_ventasCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type movimientos_inventarioCreateWithoutProductosInput = {
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
  }

  export type movimientos_inventarioUncheckedCreateWithoutProductosInput = {
    id?: number
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
  }

  export type movimientos_inventarioCreateOrConnectWithoutProductosInput = {
    where: movimientos_inventarioWhereUniqueInput
    create: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput>
  }

  export type movimientos_inventarioCreateManyProductosInputEnvelope = {
    data: movimientos_inventarioCreateManyProductosInput | movimientos_inventarioCreateManyProductosInput[]
    skipDuplicates?: boolean
  }

  export type detalle_ventasUpsertWithWhereUniqueWithoutProductosInput = {
    where: detalle_ventasWhereUniqueInput
    update: XOR<detalle_ventasUpdateWithoutProductosInput, detalle_ventasUncheckedUpdateWithoutProductosInput>
    create: XOR<detalle_ventasCreateWithoutProductosInput, detalle_ventasUncheckedCreateWithoutProductosInput>
  }

  export type detalle_ventasUpdateWithWhereUniqueWithoutProductosInput = {
    where: detalle_ventasWhereUniqueInput
    data: XOR<detalle_ventasUpdateWithoutProductosInput, detalle_ventasUncheckedUpdateWithoutProductosInput>
  }

  export type detalle_ventasUpdateManyWithWhereWithoutProductosInput = {
    where: detalle_ventasScalarWhereInput
    data: XOR<detalle_ventasUpdateManyMutationInput, detalle_ventasUncheckedUpdateManyWithoutProductosInput>
  }

  export type detalle_ventasScalarWhereInput = {
    AND?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
    OR?: detalle_ventasScalarWhereInput[]
    NOT?: detalle_ventasScalarWhereInput | detalle_ventasScalarWhereInput[]
    id?: IntFilter<"detalle_ventas"> | number
    venta_id?: IntNullableFilter<"detalle_ventas"> | number | null
    producto_id?: IntNullableFilter<"detalle_ventas"> | number | null
    cantidad?: IntNullableFilter<"detalle_ventas"> | number | null
    precio_unitario?: DecimalNullableFilter<"detalle_ventas"> | Decimal | DecimalJsLike | number | string | null
  }

  export type movimientos_inventarioUpsertWithWhereUniqueWithoutProductosInput = {
    where: movimientos_inventarioWhereUniqueInput
    update: XOR<movimientos_inventarioUpdateWithoutProductosInput, movimientos_inventarioUncheckedUpdateWithoutProductosInput>
    create: XOR<movimientos_inventarioCreateWithoutProductosInput, movimientos_inventarioUncheckedCreateWithoutProductosInput>
  }

  export type movimientos_inventarioUpdateWithWhereUniqueWithoutProductosInput = {
    where: movimientos_inventarioWhereUniqueInput
    data: XOR<movimientos_inventarioUpdateWithoutProductosInput, movimientos_inventarioUncheckedUpdateWithoutProductosInput>
  }

  export type movimientos_inventarioUpdateManyWithWhereWithoutProductosInput = {
    where: movimientos_inventarioScalarWhereInput
    data: XOR<movimientos_inventarioUpdateManyMutationInput, movimientos_inventarioUncheckedUpdateManyWithoutProductosInput>
  }

  export type movimientos_inventarioScalarWhereInput = {
    AND?: movimientos_inventarioScalarWhereInput | movimientos_inventarioScalarWhereInput[]
    OR?: movimientos_inventarioScalarWhereInput[]
    NOT?: movimientos_inventarioScalarWhereInput | movimientos_inventarioScalarWhereInput[]
    id?: IntFilter<"movimientos_inventario"> | number
    producto_id?: IntNullableFilter<"movimientos_inventario"> | number | null
    tipo?: StringNullableFilter<"movimientos_inventario"> | string | null
    cantidad?: IntNullableFilter<"movimientos_inventario"> | number | null
    observacion?: StringNullableFilter<"movimientos_inventario"> | string | null
    fecha?: DateTimeNullableFilter<"movimientos_inventario"> | Date | string | null
  }

  export type usuariosCreateWithoutReportesInput = {
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    ventas?: ventasCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutReportesInput = {
    id?: number
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    ventas?: ventasUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutReportesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutReportesInput, usuariosUncheckedCreateWithoutReportesInput>
  }

  export type usuariosUpsertWithoutReportesInput = {
    update: XOR<usuariosUpdateWithoutReportesInput, usuariosUncheckedUpdateWithoutReportesInput>
    create: XOR<usuariosCreateWithoutReportesInput, usuariosUncheckedCreateWithoutReportesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutReportesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutReportesInput, usuariosUncheckedUpdateWithoutReportesInput>
  }

  export type usuariosUpdateWithoutReportesInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ventas?: ventasUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutReportesInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ventas?: ventasUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type reportesCreateWithoutUsuariosInput = {
    tipo?: string | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUncheckedCreateWithoutUsuariosInput = {
    id?: number
    tipo?: string | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesCreateOrConnectWithoutUsuariosInput = {
    where: reportesWhereUniqueInput
    create: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput>
  }

  export type reportesCreateManyUsuariosInputEnvelope = {
    data: reportesCreateManyUsuariosInput | reportesCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type ventasCreateWithoutUsuariosInput = {
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasCreateNestedManyWithoutVentasInput
    facturas?: facturasCreateNestedManyWithoutVentasInput
  }

  export type ventasUncheckedCreateWithoutUsuariosInput = {
    id?: number
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
    detalle_ventas?: detalle_ventasUncheckedCreateNestedManyWithoutVentasInput
    facturas?: facturasUncheckedCreateNestedManyWithoutVentasInput
  }

  export type ventasCreateOrConnectWithoutUsuariosInput = {
    where: ventasWhereUniqueInput
    create: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput>
  }

  export type ventasCreateManyUsuariosInputEnvelope = {
    data: ventasCreateManyUsuariosInput | ventasCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type reportesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: reportesWhereUniqueInput
    update: XOR<reportesUpdateWithoutUsuariosInput, reportesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<reportesCreateWithoutUsuariosInput, reportesUncheckedCreateWithoutUsuariosInput>
  }

  export type reportesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: reportesWhereUniqueInput
    data: XOR<reportesUpdateWithoutUsuariosInput, reportesUncheckedUpdateWithoutUsuariosInput>
  }

  export type reportesUpdateManyWithWhereWithoutUsuariosInput = {
    where: reportesScalarWhereInput
    data: XOR<reportesUpdateManyMutationInput, reportesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type reportesScalarWhereInput = {
    AND?: reportesScalarWhereInput | reportesScalarWhereInput[]
    OR?: reportesScalarWhereInput[]
    NOT?: reportesScalarWhereInput | reportesScalarWhereInput[]
    id?: IntFilter<"reportes"> | number
    tipo?: StringNullableFilter<"reportes"> | string | null
    generado_por?: IntNullableFilter<"reportes"> | number | null
    fecha?: DateTimeNullableFilter<"reportes"> | Date | string | null
    datos?: JsonNullableFilter<"reportes">
  }

  export type ventasUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: ventasWhereUniqueInput
    update: XOR<ventasUpdateWithoutUsuariosInput, ventasUncheckedUpdateWithoutUsuariosInput>
    create: XOR<ventasCreateWithoutUsuariosInput, ventasUncheckedCreateWithoutUsuariosInput>
  }

  export type ventasUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: ventasWhereUniqueInput
    data: XOR<ventasUpdateWithoutUsuariosInput, ventasUncheckedUpdateWithoutUsuariosInput>
  }

  export type ventasUpdateManyWithWhereWithoutUsuariosInput = {
    where: ventasScalarWhereInput
    data: XOR<ventasUpdateManyMutationInput, ventasUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type ventasScalarWhereInput = {
    AND?: ventasScalarWhereInput | ventasScalarWhereInput[]
    OR?: ventasScalarWhereInput[]
    NOT?: ventasScalarWhereInput | ventasScalarWhereInput[]
    id?: IntFilter<"ventas"> | number
    usuario_id?: IntNullableFilter<"ventas"> | number | null
    fecha?: DateTimeNullableFilter<"ventas"> | Date | string | null
    total?: DecimalNullableFilter<"ventas"> | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: StringNullableFilter<"ventas"> | string | null
  }

  export type detalle_ventasCreateWithoutVentasInput = {
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
    productos?: productosCreateNestedOneWithoutDetalle_ventasInput
  }

  export type detalle_ventasUncheckedCreateWithoutVentasInput = {
    id?: number
    producto_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasCreateOrConnectWithoutVentasInput = {
    where: detalle_ventasWhereUniqueInput
    create: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput>
  }

  export type detalle_ventasCreateManyVentasInputEnvelope = {
    data: detalle_ventasCreateManyVentasInput | detalle_ventasCreateManyVentasInput[]
    skipDuplicates?: boolean
  }

  export type facturasCreateWithoutVentasInput = {
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type facturasUncheckedCreateWithoutVentasInput = {
    id?: number
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type facturasCreateOrConnectWithoutVentasInput = {
    where: facturasWhereUniqueInput
    create: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput>
  }

  export type facturasCreateManyVentasInputEnvelope = {
    data: facturasCreateManyVentasInput | facturasCreateManyVentasInput[]
    skipDuplicates?: boolean
  }

  export type usuariosCreateWithoutVentasInput = {
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    reportes?: reportesCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosUncheckedCreateWithoutVentasInput = {
    id?: number
    nombre?: string | null
    email: string
    password: string
    rol?: string | null
    creado_en?: Date | string | null
    reportes?: reportesUncheckedCreateNestedManyWithoutUsuariosInput
  }

  export type usuariosCreateOrConnectWithoutVentasInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutVentasInput, usuariosUncheckedCreateWithoutVentasInput>
  }

  export type detalle_ventasUpsertWithWhereUniqueWithoutVentasInput = {
    where: detalle_ventasWhereUniqueInput
    update: XOR<detalle_ventasUpdateWithoutVentasInput, detalle_ventasUncheckedUpdateWithoutVentasInput>
    create: XOR<detalle_ventasCreateWithoutVentasInput, detalle_ventasUncheckedCreateWithoutVentasInput>
  }

  export type detalle_ventasUpdateWithWhereUniqueWithoutVentasInput = {
    where: detalle_ventasWhereUniqueInput
    data: XOR<detalle_ventasUpdateWithoutVentasInput, detalle_ventasUncheckedUpdateWithoutVentasInput>
  }

  export type detalle_ventasUpdateManyWithWhereWithoutVentasInput = {
    where: detalle_ventasScalarWhereInput
    data: XOR<detalle_ventasUpdateManyMutationInput, detalle_ventasUncheckedUpdateManyWithoutVentasInput>
  }

  export type facturasUpsertWithWhereUniqueWithoutVentasInput = {
    where: facturasWhereUniqueInput
    update: XOR<facturasUpdateWithoutVentasInput, facturasUncheckedUpdateWithoutVentasInput>
    create: XOR<facturasCreateWithoutVentasInput, facturasUncheckedCreateWithoutVentasInput>
  }

  export type facturasUpdateWithWhereUniqueWithoutVentasInput = {
    where: facturasWhereUniqueInput
    data: XOR<facturasUpdateWithoutVentasInput, facturasUncheckedUpdateWithoutVentasInput>
  }

  export type facturasUpdateManyWithWhereWithoutVentasInput = {
    where: facturasScalarWhereInput
    data: XOR<facturasUpdateManyMutationInput, facturasUncheckedUpdateManyWithoutVentasInput>
  }

  export type facturasScalarWhereInput = {
    AND?: facturasScalarWhereInput | facturasScalarWhereInput[]
    OR?: facturasScalarWhereInput[]
    NOT?: facturasScalarWhereInput | facturasScalarWhereInput[]
    id?: IntFilter<"facturas"> | number
    venta_id?: IntNullableFilter<"facturas"> | number | null
    folio?: StringNullableFilter<"facturas"> | string | null
    total?: DecimalNullableFilter<"facturas"> | Decimal | DecimalJsLike | number | string | null
    fecha?: DateTimeNullableFilter<"facturas"> | Date | string | null
  }

  export type usuariosUpsertWithoutVentasInput = {
    update: XOR<usuariosUpdateWithoutVentasInput, usuariosUncheckedUpdateWithoutVentasInput>
    create: XOR<usuariosCreateWithoutVentasInput, usuariosUncheckedCreateWithoutVentasInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutVentasInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutVentasInput, usuariosUncheckedUpdateWithoutVentasInput>
  }

  export type usuariosUpdateWithoutVentasInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reportes?: reportesUpdateManyWithoutUsuariosNestedInput
  }

  export type usuariosUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: NullableStringFieldUpdateOperationsInput | string | null
    creado_en?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reportes?: reportesUncheckedUpdateManyWithoutUsuariosNestedInput
  }

  export type detalle_ventasCreateManyProductosInput = {
    id?: number
    venta_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type movimientos_inventarioCreateManyProductosInput = {
    id?: number
    tipo?: string | null
    cantidad?: number | null
    observacion?: string | null
    fecha?: Date | string | null
  }

  export type detalle_ventasUpdateWithoutProductosInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    ventas?: ventasUpdateOneWithoutDetalle_ventasNestedInput
  }

  export type detalle_ventasUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasUncheckedUpdateManyWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    venta_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type movimientos_inventarioUpdateWithoutProductosInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type movimientos_inventarioUncheckedUpdateWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type movimientos_inventarioUncheckedUpdateManyWithoutProductosInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    observacion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportesCreateManyUsuariosInput = {
    id?: number
    tipo?: string | null
    fecha?: Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ventasCreateManyUsuariosInput = {
    id?: number
    fecha?: Date | string | null
    total?: Decimal | DecimalJsLike | number | string | null
    metodo_pago?: string | null
  }

  export type reportesUpdateWithoutUsuariosInput = {
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type reportesUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    tipo?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    datos?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ventasUpdateWithoutUsuariosInput = {
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUpdateManyWithoutVentasNestedInput
    facturas?: facturasUpdateManyWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
    detalle_ventas?: detalle_ventasUncheckedUpdateManyWithoutVentasNestedInput
    facturas?: facturasUncheckedUpdateManyWithoutVentasNestedInput
  }

  export type ventasUncheckedUpdateManyWithoutUsuariosInput = {
    id?: IntFieldUpdateOperationsInput | number
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    metodo_pago?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type detalle_ventasCreateManyVentasInput = {
    id?: number
    producto_id?: number | null
    cantidad?: number | null
    precio_unitario?: Decimal | DecimalJsLike | number | string | null
  }

  export type facturasCreateManyVentasInput = {
    id?: number
    folio?: string | null
    total?: Decimal | DecimalJsLike | number | string | null
    fecha?: Date | string | null
  }

  export type detalle_ventasUpdateWithoutVentasInput = {
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    productos?: productosUpdateOneWithoutDetalle_ventasNestedInput
  }

  export type detalle_ventasUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type detalle_ventasUncheckedUpdateManyWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    producto_id?: NullableIntFieldUpdateOperationsInput | number | null
    cantidad?: NullableIntFieldUpdateOperationsInput | number | null
    precio_unitario?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type facturasUpdateWithoutVentasInput = {
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type facturasUncheckedUpdateWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type facturasUncheckedUpdateManyWithoutVentasInput = {
    id?: IntFieldUpdateOperationsInput | number
    folio?: NullableStringFieldUpdateOperationsInput | string | null
    total?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    fecha?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}